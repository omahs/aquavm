var searchIndex = JSON.parse('{\
"air":{"doc":"","t":"NDNNELLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLMALLLLLLLLLLLLDLLFLLFLLLLLLLLLLLMLMLLMFLLLLLLLAAANDDEDNNENMMLLLLLLLLLLLLLLLLLLMLLLLALLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLLLMMFFFMMAMLLLLLMMFMFAMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMDMALLMLLLLLLLLLMAMLLLLLDMLLLLLLLLLLLLLLLLLLFLLLLLLLLRDMLLLLMMLLLLLLLLLLLMLFLMMFFLMLLMLLLLDLLLFLLLLLLLLLLLLLLIKDLLLFLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLALMFFALMFMLLLLLLNDNDDDENDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLDLLLMLLLLLLLLLLLLLLLLLFF","n":["Beautify","Cli","Run","Stats","Subcommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","beautify","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_fd_flags","get_fd_flags","group_id","has_subcommand","init","init","into","into","main","new_set_fd_flags","new_set_fd_flags","set_fd_flags","set_fd_flags","subcommand","trace","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","Args","augment_args","augment_args_for_update","beautify","borrow","borrow_mut","build_output","command","command_for_update","debug","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","get_fd_flags","group_id","indent_step","init","input","into","new_set_fd_flags","output","read_script","set_fd_flags","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","run","stats","utils","Anomaly","Args","Keys","Mode","ModeArgs","Native","PlainData","Source","Wasm","air_interpreter_path","air_near_contract_path","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_results_path","clone","clone_into","command","command_for_update","data","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","ed25519_key","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_keypair","get_runner","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init_tracing","into","into","into","into","into","json","keys","load_data","load_data_or_default","load_keypair_ed25519","max_heap_size","mode","native","native","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","no_fail","random_key","read_call_results","repeat","run","runner","runner_tracing_params","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","to_owned","tracing_params","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wasm","wasm","ExecutionData","air_script","anomaly","borrow","borrow_mut","current_data","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new_set_fd_flags","particle","plain","prev_data","set_fd_flags","try_from","try_into","type_id","vzip","AnomalyDataArgs","anomaly_data_path","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","debug","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","get_fd_flags","group_id","init","into","load","new_set_fd_flags","set_fd_flags","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DEFAULT_DATA","PlainDataArgs","air_script_path","augment_args","augment_args_for_update","borrow","borrow_mut","current_data_path","current_peer_id","debug","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","get_fd_flags","group_id","init","init_peer_id","into","load","new_set_fd_flags","particle_id","prev_data_path","print_air_prompt","read_air_with_prompt","set_fd_flags","timestamp","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","NativeAvmRunner","borrow","borrow_mut","call_tracing","create_native_avm_runner","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new_set_fd_flags","set_fd_flags","try_from","try_into","type_id","vzip","AirRunner","call_tracing","WasmAvmRunner","borrow","borrow_mut","call_tracing","create_wasm_avm_runner","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new_set_fd_flags","set_fd_flags","try_from","try_into","type_id","vzip","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","debug","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","get_fd_flags","group_id","init","into","log_data","new_set_fd_flags","pretty","print_log_record","read_logs","report","set_fd_flags","sort_stats_by_duration","stats","stats","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Close","CloseMessage","Enter","LogKey","LogRecord","LogValue","Message","New","Span","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","format_argument","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_key","hash","init","init","init","init","init","init","into","into","into","into","into","into","level","name","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","partial_cmp","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","span","span_name","spans","target","target","time_busy","time_idle","timestamp","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","StatsReport","borrow","borrow_mut","consider","data","debug","default","deref","deref_mut","drop","from","get_fd_flags","init","into","new","new_set_fd_flags","report","set_fd_flags","try_from","try_into","type_id","vzip","parse_tracing_duration","unix_timestamp_now"],"q":[[0,"air"],[57,"air::beautify"],[89,"air::trace"],[92,"air::trace::run"],[246,"air::trace::run::data"],[269,"air::trace::run::data::anomaly"],[298,"air::trace::run::data::plain"],[335,"air::trace::run::native"],[354,"air::trace::run::runner"],[356,"air::trace::run::wasm"],[375,"air::trace::stats"],[409,"air::trace::stats::log_data"],[550,"air::trace::stats::report"],[572,"air::trace::utils"],[574,"clap_builder::builder::command"],[575,"core::fmt"],[576,"core::fmt"],[577,"clap_builder::parser::matches::arg_matches"],[578,"clap_builder"],[579,"system_interface::fs::fd_flags"],[580,"std::io::error"],[581,"clap_builder::util::id"],[582,"core::option"],[583,"anyhow"],[584,"io_lifetimes::portability"],[585,"system_interface::fs::fd_flags"],[586,"std::io"],[587,"alloc::boxed"],[588,"alloc::string"],[589,"core::fmt"],[590,"std::path"],[591,"core::convert"],[592,"std::path"],[593,"alloc::vec"],[594,"avm_interface::raw_outcome"],[595,"std::io::error"],[596,"core::cmp"],[597,"serde::de"],[598,"serde_json::value"],[599,"core::hash"],[600,"core::marker"],[601,"core::hash"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[9,0,9,9,0,7,7,9,9,0,7,9,7,9,7,7,7,9,7,9,7,9,7,9,7,9,7,9,7,9,7,9,7,9,7,9,7,9,0,7,9,7,9,7,0,7,9,7,9,7,9,7,9,7,9,7,9,0,20,20,0,20,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,0,0,0,27,0,0,0,0,30,27,0,30,25,25,25,28,24,25,28,24,27,27,30,25,27,28,24,30,25,27,28,24,25,24,24,25,25,0,30,25,27,28,24,30,25,27,28,24,30,25,27,28,24,30,25,27,28,24,28,25,27,28,24,30,25,27,28,24,25,27,28,24,25,27,28,24,30,25,27,28,24,28,0,25,28,24,27,30,25,27,28,24,0,30,25,27,28,24,25,25,0,0,0,25,25,0,24,30,25,27,28,24,25,28,0,25,0,0,25,30,25,27,28,24,25,24,25,30,25,27,28,24,30,25,27,28,24,30,25,27,28,24,25,27,28,24,25,27,28,24,30,25,27,28,24,0,24,0,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,0,0,41,41,41,41,41,41,41,41,41,0,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,33,0,46,46,46,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,0,0,0,47,47,0,47,47,47,47,47,47,47,57,0,57,0,0,0,0,57,0,55,48,55,52,56,57,58,48,55,52,56,57,58,52,48,55,52,56,57,58,48,55,52,56,57,58,48,55,52,56,57,58,48,55,56,57,58,48,55,52,56,57,58,52,52,52,56,55,55,57,57,58,58,0,48,55,52,56,57,58,48,55,52,56,57,58,52,48,52,48,55,52,56,57,58,48,55,52,56,57,58,56,55,48,55,52,56,57,58,52,48,55,52,56,57,58,48,52,56,48,52,58,58,56,55,57,58,48,55,52,56,57,58,48,55,52,56,57,58,48,55,52,56,57,58,48,48,55,52,56,57,58,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0],"f":[0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],0,[[]],[[]],[[]],[[]],[[],1],[[],1],[2,[[4,[3]]]],[2,[[4,[3]]]],[5],[5],[5],[5],[5],[5],[[]],[[]],[6,[[4,[7,8]]]],[6,[[4,[9,8]]]],[6,[[4,[7,8]]]],[6,[[4,[9,8]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[13,[12]]]],[14,15],[[],5],[[],5],[[]],[[]],[[],16],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],0,0,[[],4],[[],4],[[],4],[[],4],[[],19],[[],19],[[7,6],[[4,[8]]]],[[9,6],[[4,[8]]]],[[7,6],[[4,[8]]]],[[9,6],[[4,[8]]]],[[]],[[]],0,[1,1],[1,1],[20,16],[[]],[[]],[20,[[16,[[22,[21]]]]]],[[],1],[[],1],[2,[[4,[3]]]],[5],[5],[5],[[]],[6,[[4,[20,8]]]],[6,[[4,[20,8]]]],[[],[[4,[10,11]]]],[[],[[13,[12]]]],0,[[],5],0,[[]],[10,[[4,[[18,[17]],11]]]],0,[20,[[16,[23]]]],[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[20,6],[[4,[8]]]],[[20,6],[[4,[8]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[24,24],[[]],[[],1],[[],1],0,[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[25,2],26],[[27,2],26],[[28,2],26],[[24,2],26],[[]],[[]],[[]],[[]],[[]],[6,[[4,[25,8]]]],[6,[[4,[27,8]]]],[6,[[4,[28,8]]]],[6,[[4,[24,8]]]],[6,[[4,[25,8]]]],[6,[[4,[27,8]]]],[6,[[4,[28,8]]]],[6,[[4,[24,8]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[28,[[16,[29]]]],[[[13,[30]],31,31,[13,[32]]],[[16,[[22,[33]]]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[14,15],[[],5],[[],5],[[],5],[[],5],[[],5],[[23,34]],[[]],[[]],[[]],[[]],[[]],0,0,[31,[[16,[23]]]],[[[13,[[35,[31]]]],14],[[16,[23]]]],[36,[[4,[29,37]]]],0,0,0,0,[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],0,0,[[[13,[31]]],[[16,[38]]]],0,[25,16],0,0,[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],0,[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],19],[[],19],[[],19],[[],19],[[],19],[[25,6],[[4,[8]]]],[[27,6],[[4,[8]]]],[[28,6],[[4,[8]]]],[[24,6],[[4,[8]]]],[[25,6],[[4,[8]]]],[[27,6],[[4,[8]]]],[[28,6],[[4,[8]]]],[[24,6],[[4,[8]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],0,[2,[[4,[3]]]],[5],[5],[5],[[]],[[],[[4,[10,11]]]],[[],5],[[]],[10,[[4,[[18,[17]],11]]]],0,0,0,[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2,[[4,[3]]]],[5],[5],[5],[[39,2],26],[[]],[6,[[4,[39,8]]]],[6,[[4,[39,8]]]],[[],[[4,[10,11]]]],[[],[[13,[12]]]],[[],5],[[]],[39,[[16,[40]]]],[10,[[4,[[18,[17]],11]]]],[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[39,6],[[4,[8]]]],[[39,6],[[4,[8]]]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],0,0,[2,[[4,[3]]]],[5],[5],[5],[[41,2],26],[[]],[6,[[4,[41,8]]]],[6,[[4,[41,8]]]],[[],[[4,[10,11]]]],[[],[[13,[12]]]],[[],5],0,[[]],[41,[[16,[40]]]],[10,[[4,[[18,[17]],11]]]],0,0,[[]],[[[13,[31]]],[[16,[23]]]],[[[18,[17]]],[[4,[11]]]],0,[[],4],[[],4],0,[[],19],[[41,6],[[4,[8]]]],[[41,6],[[4,[8]]]],[[]],0,[[]],[[]],[[42,23,[43,[34]],[43,[34]],23,32,44,23,38,23,34,29,23],[[16,[45]]]],[[],[[16,[[22,[33]]]]]],[2,[[4,[3]]]],[5],[5],[5],[[]],[[],[[4,[10,11]]]],[[],5],[[]],[10,[[4,[[18,[17]],11]]]],[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[]],0,[[23,[43,[34]],[43,[34]],23,32,44,23,38,23,34,29,23],[[16,[45]]]],0,[[]],[[]],[[46,23,[43,[34]],[43,[34]],23,32,44,23,38,23,34,29,23],[[16,[45]]]],[[31,[13,[32]]],[[16,[[22,[33]]]]]],[2,[[4,[3]]]],[5],[5],[5],[[]],[[],[[4,[10,11]]]],[[],5],[[]],[10,[[4,[[18,[17]],11]]]],[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2,[[4,[3]]]],[5],[5],[5],[[]],[6,[[4,[47,8]]]],[6,[[4,[47,8]]]],[[],[[4,[10,11]]]],[[],[[13,[12]]]],[[],5],[[]],0,[10,[[4,[[18,[17]],11]]]],0,[[21,48],49],[50,51],0,[[[18,[17]]],[[4,[11]]]],0,[47,16],0,[[],4],[[],4],[[],19],[[47,6],[[4,[8]]]],[[47,6],[[4,[8]]]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,52],53],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[54,[[4,[48]]]],[54,[[4,[55]]]],[54,[[4,[56]]]],[54,[[4,[57]]]],[54,[[4,[58]]]],[5],[5],[5],[5],[5],[5],[[52,52],15],[[],15],[[],15],0,[[55,2],26],[[55,2],26],[[57,2],26],[[57,2],26],[[58,2],26],[[58,2],26],[59,23],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[],[[4,[10,11]]]],[[[0,[60,61]],62],32],[48,52],[[52,63]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[10,[[4,[[18,[17]],11]]]],[[52,52],[[13,[53]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],[[[18,[17]]],[[4,[11]]]],0,0,0,0,0,0,0,0,[[],23],[[],23],[[],23],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[64,48],16],0,[2,[[4,[3]]]],[[],64],[5],[5],[5],[[]],[[],[[4,[10,11]]]],[[],5],[[]],[[],64],[10,[[4,[[18,[17]],11]]]],[[64,21,15],49],[[[18,[17]]],[[4,[11]]]],[[],4],[[],4],[[],19],[[]],[14,[[4,[65,37]]]],[[],32]],"c":[],"p":[[3,"Command",574],[3,"Formatter",575],[3,"Error",575],[4,"Result",576],[15,"usize"],[3,"ArgMatches",577],[3,"Cli",0],[6,"Error",578],[4,"Subcommand",0],[3,"FdFlags",579],[3,"Error",580],[3,"Id",581],[4,"Option",582],[15,"str"],[15,"bool"],[6,"Result",583],[8,"AsFilelike",584],[3,"SetFdFlags",579],[3,"TypeId",585],[3,"Args",57],[8,"Write",586],[3,"Box",587],[3,"String",588],[3,"ModeArgs",92],[3,"Args",92],[6,"Result",575],[4,"Source",92],[3,"Keys",92],[4,"KeyPair",589],[4,"Mode",92],[3,"Path",590],[15,"u64"],[8,"AirRunner",354],[15,"u8"],[8,"AsRef",591],[3,"PathBuf",590],[3,"Error",583],[6,"CallResults",592],[3,"AnomalyDataArgs",269],[3,"ExecutionData",246],[3,"PlainDataArgs",298],[3,"NativeAvmRunner",335],[3,"Vec",593],[15,"u32"],[3,"RawAVMOutcome",594],[3,"WasmAvmRunner",356],[3,"Args",375],[3,"LogRecord",409],[6,"Result",580],[8,"BufRead",586],[8,"Iterator",595],[3,"LogKey",409],[4,"Ordering",596],[8,"Deserializer",597],[3,"Span",409],[3,"LogValue",409],[4,"Message",409],[3,"CloseMessage",409],[4,"Value",598],[8,"Hash",599],[8,"Sized",600],[8,"BuildHasher",599],[8,"Hasher",599],[3,"StatsReport",550],[3,"Duration",601]]},\
"air_beautifier":{"doc":"","t":"DERNNFLLFLLLLLLLLLLLLLLLLLLLLLL","n":["Beautifier","BeautifyError","DEFAULT_INDENT_STEP","Io","Parse","beautify","beautify","beautify_ast","beautify_to_string","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","into","into","into_inner","new","new_with_indent","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"air_beautifier"],[31,"std::io"],[32,"core::result"],[33,"air_parser::ast::instructions"],[34,"core::convert"],[35,"alloc::string"],[36,"core::fmt"],[37,"core::fmt"],[38,"core::error"],[39,"core::option"],[40,"core::any"]],"d":["AIR beautifier.","Error produced by the Beautifier.","","","","Beautify the <code>air_script</code> with default settings to the <code>output</code>…","Emit beautified code for the <code>air_script</code>.","Emit beautified code for the <code>ast</code>.","Beautify the <code>air_script</code> to a string with default settings. …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwrap the Beautifier into the underlying writer.","Beautifier for the output with default indentation step.","Beautifier for the output with custom indentation step.","","","","","","","",""],"i":[0,0,0,3,3,0,5,5,0,5,3,5,3,3,3,5,3,3,5,3,5,5,5,3,3,5,3,5,3,5,3],"f":[0,0,0,0,0,[[1,2],[[4,[3]]]],[[[5,[2]],1],[[4,[3]]]],[[[5,[2]],[7,[6]]],[[4,[3]]]],[1,[[4,[8,8]]]],[[]],[[]],[[]],[[]],[[3,9],10],[[3,9],10],[[]],[[]],[11,3],[[]],[[]],[[[5,[2]]],2],[2,[[5,[2]]]],[[2,12],[[5,[2]]]],[3,[[14,[13]]]],[[],8],[[],4],[[],4],[[],4],[[],4],[[],15],[[],15]],"c":[],"p":[[15,"str"],[8,"Write",31],[4,"BeautifyError",0],[4,"Result",32],[3,"Beautifier",0],[4,"Instruction",33],[8,"AsRef",34],[3,"String",35],[3,"Formatter",36],[6,"Result",36],[3,"Error",37],[15,"usize"],[8,"Error",38],[4,"Option",39],[3,"TypeId",40]]},\
"air_beautify_wasm":{"doc":"","t":"F","n":["beautify"],"q":[[0,"air_beautify_wasm"],[1,"alloc::string"],[2,"wasm_bindgen"],[3,"core::result"]],"d":[""],"i":[0],"f":[[1,[[3,[1,2]]]]],"c":[],"p":[[3,"String",1],[3,"JsError",2],[4,"Result",3]]},\
"air_execution_info_collector":{"doc":"","t":"DDDDDDMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLM","n":["ApTracker","CallTracker","FoldTracker","InstructionTracker","NewTracker","ParTracker","ap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executed_count","executed_count","executed_count","executed_count","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","get_iteration","into","into","into","into","into","into","match_count","meet_ap","meet_call","meet_executed_ap","meet_executed_call","meet_executed_par","meet_fold_scalar","meet_fold_stream","meet_match","meet_mismatch","meet_new","meet_next","meet_null","meet_par","meet_seq","meet_xor","mismatch_count","new_tracker","next_count","null_count","par","seen_count","seen_count","seen_count","seen_scalar_count","seen_stream_count","seq_count","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","xor_count"],"q":[[0,"air_execution_info_collector"],[108,"core::fmt"],[109,"core::fmt"],[110,"core::result"],[111,"core::any"]],"d":["","","","Intended to track a number of executed instruction of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping from a new instruction position in a script to a …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,2,3,4,5,6,1,2,3,4,5,6,1,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,2,3,5,6,1,2,3,4,5,6,1,1,2,3,4,5,6,6,1,2,3,4,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,5,4,4,1,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],2],[[],3],[[],4],[[],5],[[],6],[[1,1],7],[[2,2],7],[[3,3],7],[[4,4],7],[[5,5],7],[[6,6],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,[[1,8],9],[[2,8],9],[[3,8],9],[[4,8],9],[[5,8],9],[[6,8],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[6,10],11],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[1,11],[1],[1],[[1,10]],[1],[1],[1],[1],[1],0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0],"c":[],"p":[[3,"InstructionTracker",0],[3,"ApTracker",0],[3,"CallTracker",0],[3,"FoldTracker",0],[3,"ParTracker",0],[3,"NewTracker",0],[15,"bool"],[3,"Formatter",108],[6,"Result",108],[3,"AirPos",109],[15,"u32"],[4,"Result",110],[3,"TypeId",111]]},\
"air_interpreter_cid":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLF","n":["CID","CidCalculationError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","eq","equivalent","fmt","fmt","fmt","from","from","from","hash","into","into","into_inner","json_data_cid","new","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value_to_json_cid"],"q":[[0,"air_interpreter_cid"],[34,"core::marker"],[35,"serde::de"],[36,"core::result"],[37,"core::fmt"],[38,"core::fmt"],[39,"core::hash"],[40,"alloc::string"],[41,"core::convert"],[42,"serde::ser"],[43,"core::error"],[44,"core::option"],[45,"core::any"],[46,"serde::ser"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Calculate a CID of JSON-serialized value."],"i":[0,0,6,2,6,2,2,2,2,2,2,6,6,2,6,6,2,2,6,2,2,0,2,2,6,2,6,6,2,6,2,6,2,0],"f":[0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[3,[[4,[[2,[1]]]]]],[[2,2],5],[[],5],[[6,7],8],[[6,7],8],[[[2,[1]],7],8],[[]],[9,6],[[]],[[2,10]],[[]],[[]],[[[2,[1]]],11],[[[13,[12]]],[[2,[1]]]],[[[14,[11]]],[[2,[1]]]],[[[2,[1]],15],4],[6,[[17,[16]]]],[[]],[[],11],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[19,[[4,[[2,[19]],6]]]]],"c":[],"p":[[8,"Sized",34],[3,"CID",0],[8,"Deserializer",35],[4,"Result",36],[15,"bool"],[3,"CidCalculationError",0],[3,"Formatter",37],[6,"Result",37],[3,"Error",38],[8,"Hasher",39],[3,"String",40],[15,"u8"],[15,"slice"],[8,"Into",41],[8,"Serializer",42],[8,"Error",43],[4,"Option",44],[3,"TypeId",45],[8,"Serialize",42]]},\
"air_interpreter_client":{"doc":"","t":"RFFF","n":["DEFAULT_LOG_LEVEL","ast","invoke","main"],"q":[[0,"air_interpreter_client"],[4,"alloc::string"],[5,"alloc::vec"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,[1,1],[[1,[3,[2]],[3,[2]],[3,[2]],[3,[2]],4],1],[[]]],"c":[],"p":[[3,"String",4],[15,"u8"],[3,"Vec",5],[15,"str"]]},\
"air_interpreter_data":{"doc":"","t":"NDNEDNNDEDDDDNNEDNNGDDDDNNDNNGENNNENDNDGDNEDLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMM","n":["Ap","ApResult","Call","CallResult","CallServiceFailed","Canon","Canon","CanonCidAggregate","CanonResult","CanonResultCidAggregate","CidInfo","CidStore","CidTracker","Executed","Executed","ExecutedState","ExecutionTrace","Failed","Fold","FoldLore","FoldResult","FoldSubTraceLore","GenerationIdx","InterpreterData","Literal","Par","ParResult","PeerId","PeerIdWithCallId","PosType","Provenance","RequestSentBy","RequestSentBy","Scalar","Sender","ServiceResult","ServiceResultCidAggregate","Stream","SubTraceDesc","TraceLen","TracePos","Unused","ValueRef","Versions","add","add","add_assign","add_assign","argument_hash","begin_pos","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canon","canon_element_store","canon_result_store","checked_add","checked_add","checked_sub","cid_info","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data_version","data_version","default","default","default","default","default","default","default","default","default","default","default","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executed","executed_scalar","executed_service_result","executed_stream_stub","executed_unused","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cid_stores","from_execution_result","get","get","get","get_cid","get_mut","hash","hash","index","index_mut","interpreter_version","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","last_call_request_id","left_size","len","literal","lore","message","new","new","new","new","new","new","new","new","new","new","new","next","par","partial_cmp","partial_cmp","partial_cmp","pop","prev","provenance","push","request_sent_by","res_generations","ret_code","right_size","sent_peer_id","sent_peer_id_with_call_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_result","service_result_store","signatures","size","stub","stub","sub","sub","subtrace_len","subtraces_desc","tetraplet","tetraplet","tetraplet_cid","tetraplet_store","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_value","trace","trace_states_count","track_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_get_versions","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_cid","value_pos","value_store","values","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","cid","cid","call_id","peer_id","cid","generation"],"q":[[0,"air_interpreter_data"],[527,"air_interpreter_data::Provenance"],[529,"air_interpreter_data::Sender"],[531,"air_interpreter_data::ValueRef"],[533,"air_interpreter_cid"],[534,"alloc::rc"],[535,"core::option"],[536,"core::clone"],[537,"core::cmp"],[538,"semver"],[539,"serde::de"],[540,"serde::de"],[541,"core::cmp"],[542,"serde_json::value"],[543,"core::fmt"],[544,"core::fmt"],[545,"core::hash"],[546,"alloc::string"],[547,"marine_call_parameters"],[548,"serde::ser"],[549,"serde::ser"],[550,"air_interpreter_cid"],[551,"core::any"]],"d":["","Describes result of applying functor <code>apply</code> to streams.","","","","","","The type Canon trace CID refers to.","Contains ids of element that were on a stream at the …","","","Stores CID to Value corresponance.","","A corresponding call’s been already executed with such …","","","","The call returned a service error.","","This type represents all information in an execution trace …","","Let’s consider an example of trace that could be …","","The AIR interpreter could be considered as a function …","","","","","","","","Request was sent to a target node by node with such public …","Request was sent to a target node by node with such public …","The call value is stored to a scalar variable.","","","A proof of service result execution result.","The call value is stored to a stream variable.","Descriptor of a subtrace inside execution trace.","","","The call value is not stored.","","","","","","","Hash of the call arguments.","Start position in a trace of this subtrace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map CID to a canon element value.","Map CID to a canon result.","","","","CID-to-somethings mappings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of this data format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Version of an interpreter produced this data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Last exposed to a peer call request id. All next call …","","","","","This field contains a JSON-serialized value, not a plain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map CID to a service result aggregate.","Signature store.","Returns a size of subtrace that this par describes in …","","","","","Length of the subtrace.","Descriptors of a subtrace that are corresponded to the …","","","The tetraplet of the call result.","Map CID to a tetraplet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trace of AIR execution, which contains executed call, par, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to de InterpreterData from slice according to the …","Tries to de only versions part of interpreter data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Position of current value in a trace.","Map CID to value.","","Versions of data and an interpreter produced this data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[24,0,24,0,0,6,24,0,0,0,0,0,0,14,22,0,0,14,24,0,0,0,0,0,6,24,0,13,13,0,0,14,22,15,0,6,0,15,0,0,0,15,0,0,1,1,1,1,17,19,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,6,27,27,7,1,7,25,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,7,1,0,26,10,11,12,18,19,20,21,7,27,28,1,28,10,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,10,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,7,27,28,28,1,10,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,27,28,1,22,14,14,14,14,14,10,11,12,13,13,14,15,15,16,17,18,19,20,21,22,3,23,6,24,24,7,7,25,26,27,28,1,1,2,10,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,7,25,26,27,28,28,1,1,11,25,10,11,28,14,28,7,1,28,28,26,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,10,10,25,12,10,6,20,16,10,11,12,16,17,19,21,3,23,25,26,7,24,7,7,1,28,7,23,28,22,21,16,12,14,14,10,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,6,27,25,12,21,7,1,1,19,18,3,23,17,27,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,13,15,24,7,1,16,25,28,11,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,1,25,25,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,23,17,18,27,3,25,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,6,24,7,25,26,27,28,1,58,59,60,60,61,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,2],1],[[1,1]],[[1,2]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[4,[3]]]]],6],0,0,[[7,7],[[8,[7]]]],[[1,1],[[8,[1]]]],[[7,7],[[8,[7]]]],0,[[[10,[9]]],[[10,[9]]]],[[[11,[9]]],[[11,[9]]]],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[3,3],[23,23],[6,6],[24,24],[7,7],[25,25],[26,26],[27,27],[28,28],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],29],[[1,1],29],[[],30],0,[[],10],[[],11],[[],12],[[],18],[[],19],[[],20],[[],21],[[],7],[[],27],[[],28],[[],1],[28,[[31,[24]]]],[32,[[34,[[10,[33]]]]]],[32,[[34,[13]]]],[32,[[34,[14]]]],[32,[[34,[15]]]],[32,[[34,[16]]]],[32,[[34,[17]]]],[32,[[34,[18]]]],[32,[[34,[19]]]],[32,[[34,[20]]]],[32,[[34,[21]]]],[32,[[34,[22]]]],[32,[[34,[3]]]],[32,[[34,[23]]]],[32,[[34,[6]]]],[32,[[34,[24]]]],[32,[[34,[7]]]],[32,[[34,[25]]]],[32,[[34,[26]]]],[32,[[34,[27]]]],[32,[[34,[28]]]],[32,[[34,[1]]]],[[[10,[35]],[10,[35]]],36],[[12,12],36],[[13,13],36],[[14,14],36],[[15,15],36],[[16,16],36],[[17,17],36],[[18,18],36],[[19,19],36],[[20,20],36],[[21,21],36],[[22,22],36],[[3,3],36],[[23,23],36],[[6,6],36],[[24,24],36],[[7,37],36],[[7,7],36],[[27,27],36],[[28,28],36],[[28,[38,[24]]],36],[[1,1],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[5,[[4,[3]]]]],22],[[[5,[[4,[17]]]]],14],[15,14],[[[5,[[4,[17]]]]],14],[[[5,[[4,[39]]]]],14],[[[5,[[4,[17]]]]],14],[[[10,[40]],41],42],[[[11,[40]],41],42],[[12,41],42],[[13,41],42],[[13,41],42],[[14,41],42],[[15,41],42],[[15,41],42],[[16,41],42],[[17,41],42],[[18,41],42],[[19,41],42],[[20,41],42],[[21,41],42],[[22,41],42],[[3,41],42],[[23,41],42],[[6,41],42],[[24,41],42],[[24,41],42],[[7,41],42],[[7,41],42],[[25,41],42],[[26,41],42],[[27,41],42],[[28,41],42],[[1,41],42],[[1,41],42],[1,2],[[]],[11,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,7],[[]],[[]],[[]],[[]],[[[38,[24]]],28],[2,1],[[]],[[10,10],11],[[28,27,43,44,30],25],[[10,4],[[8,[5]]]],[[11,4],[[8,[5]]]],[[28,1],[[8,[24]]]],[14,[[8,[[5,[[4,[17]]]]]]]],[[28,1],[[8,[24]]]],[[7,45]],[[1,45]],[[28,1]],[[28,1]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10,36],0,0,[10,37],[[],6],0,0,[[],10],[[],11],[[44,44],12],[[46,[5,[47]]],16],[[[5,[[4,[39]]]],[5,[48]],[5,[[4,[49]]]]],17],[[1,37],19],[7,21],[[[5,[[4,[49]]]],[38,[[5,[[4,[23]]]]]]],3],[[[5,[[4,[39]]]],[5,[[4,[49]]]],6],23],[30,25],[30,26],[7,7],[[37,37],24],[[7,7],[[8,[29]]]],[[7,37],[[8,[29]]]],[[1,1],[[8,[29]]]],[28,[[8,[24]]]],[7,7],0,[[28,24]],[[[5,[47]]],22],0,0,0,[[[5,[47]]],14],[[[5,[47]],44],14],[[[10,[50]],51],34],[[13,51],34],[[14,51],34],[[15,51],34],[[16,51],34],[[17,51],34],[[18,51],34],[[19,51],34],[[20,51],34],[[21,51],34],[[22,51],34],[[3,51],34],[[23,51],34],[[6,51],34],[[24,51],34],[[7,51],34],[[25,51],34],[[26,51],34],[[27,51],34],[[28,51],34],[[1,51],34],[[[5,[[4,[17]]]]],6],0,0,[12,[[8,[44]]]],[[],21],[[],7],[[1,2],1],[[1,1],1],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[16,39],0,[28,52],[[[11,[50]],[53,[[5,[50]]]]],[[34,[[5,[[4,[50]]]],54]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[37,[[34,[1]]]],[[],34],[[[31,[55]]],[[34,[25,56]]]],[[[31,[55]]],[[34,[26,56]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0],"c":[],"p":[[3,"TracePos",0],[6,"PosType",0],[3,"CanonResultCidAggregate",0],[3,"CID",533],[3,"Rc",534],[4,"Provenance",0],[3,"GenerationIdx",0],[4,"Option",535],[8,"Clone",536],[3,"CidStore",0],[3,"CidTracker",0],[3,"ParResult",0],[4,"Sender",0],[4,"CallResult",0],[4,"ValueRef",0],[3,"CallServiceFailed",0],[3,"ServiceResultCidAggregate",0],[3,"FoldSubTraceLore",0],[3,"SubTraceDesc",0],[3,"FoldResult",0],[3,"ApResult",0],[4,"CanonResult",0],[3,"CanonCidAggregate",0],[4,"ExecutedState",0],[3,"InterpreterData",0],[3,"Versions",0],[3,"CidInfo",0],[3,"ExecutionTrace",0],[4,"Ordering",537],[3,"Version",538],[15,"slice"],[8,"Deserializer",539],[8,"Deserialize",539],[4,"Result",540],[8,"PartialEq",537],[15,"bool"],[15,"usize"],[3,"Vec",541],[4,"Value",542],[8,"Debug",543],[3,"Formatter",543],[6,"Result",543],[3,"SignatureStore",544],[15,"u32"],[8,"Hasher",545],[15,"i32"],[3,"String",546],[15,"str"],[3,"SecurityTetraplet",547],[8,"Serialize",548],[8,"Serializer",548],[6,"TraceLen",0],[8,"Into",549],[3,"CidCalculationError",533],[15,"u8"],[3,"Error",550],[3,"TypeId",551],[13,"ServiceResult",527],[13,"Canon",527],[13,"PeerIdWithCallId",529],[13,"Stream",531]]},\
"air_interpreter_interface":{"doc":"","t":"RDGGDRDDMLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLMLLLMLMMMMMLLLLMMMLLLLLLLLLLLLLMLLLL","n":["CALL_SERVICE_SUCCESS","CallRequestParams","CallRequests","CallResults","CallServiceResult","INTERPRETER_SUCCESS","InterpreterOutcome","RunParameters","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_requests","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_peer_id","data","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","err","error_message","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ivalue","function_name","init_peer_id","into","into","into","into","into_ivalue","key_format","new","new","new","next_peer_pks","ok","particle_id","result","ret_code","ret_code","secret_key_bytes","serialize","serialize","serialize","serialize","service_id","tetraplets","timestamp","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id"],"q":[[0,"air_interpreter_interface"],[94,"serde::de"],[95,"core::result"],[96,"serde_json::value"],[97,"core::fmt"],[98,"core::fmt"],[99,"alloc::string"],[100,"alloc::vec"],[101,"serde::ser"],[102,"core::any"]],"d":["","Contains arguments of a call instruction and all other …","","","Represents an executed host function result.","","Describes a result returned at the end of the interpreter …","Parameters that a host side should pass to an interpreter …","Serialized to JSON string Vec of arguments that should be …","","","","","","","","","Collected parameters of all met call instructions that …","","","","","","","","","Peer id of a current peer.","Contains script data that should be preserved in an …","","","","","","","","","","","","","Contains error message if ret_code != INTERPRETER_SUCCESS.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Name of a function from service identified by service_id …","Peer id of a peer that start this particle.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A key format.","","","","Public keys of peers that should receive data.","","Unique particle ID.","Resulted JValue serialized to a string. It’s impossible …","A error code service or builtin returned, where …","A return code, where INTERPRETER_SUCCESS means success.","A secret key material.","","","","","Id of a service that should be called.","Serialized to JSON string Vec&lt;Vec&gt; that should be passed …","Unix timestamp from a particle in milliseconds. It …","","","","","","","","","","","","","","TTL set by init peer id in milliseconds.","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,2,3,4,1,2,3,4,3,1,2,3,4,1,2,3,4,4,3,2,1,2,3,4,1,3,4,1,3,4,2,3,1,2,2,3,4,1,2,3,4,3,1,4,1,2,3,4,4,4,1,3,4,3,2,4,2,2,3,4,1,2,3,4,1,1,4,1,2,3,4,2,1,2,3,4,1,2,3,4,4,1,2,3,4],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],0,0,[[],2],[5,[[6,[1]]]],[5,[[6,[2]]]],[5,[[6,[3]]]],[5,[[6,[4]]]],[[1,1],7],[[3,3],7],[[4,4],7],[[],7],[[],7],[[],7],[[8,9],2],0,[[1,10],11],[[2,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[]],[[]],[[]],[[]],[12,[[6,[3,13]]]],0,0,[[]],[[]],[[]],[[]],[4,12],0,[[13,13,13,13],1],[[14,13,[16,[15]],[16,[13]],[16,[15]]],3],[[13,13,17,18,15,[16,[15]],13],4],0,[9,2],0,0,0,0,0,[[1,19],6],[[2,19],6],[[3,19],6],[[4,19],6],0,0,0,[[]],[[]],[[]],[[]],[[],13],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],20],[[],20],[[],20],[[],20]],"c":[],"p":[[3,"CallRequestParams",0],[3,"CallServiceResult",0],[3,"InterpreterOutcome",0],[3,"RunParameters",0],[8,"Deserializer",94],[4,"Result",95],[15,"bool"],[15,"i32"],[4,"Value",96],[3,"Formatter",97],[6,"Result",97],[4,"IValue",98],[3,"String",99],[15,"i64"],[15,"u8"],[3,"Vec",100],[15,"u64"],[15,"u32"],[8,"Serializer",101],[3,"TypeId",102]]},\
"air_interpreter_server":{"doc":"","t":"AFFFAFFFF","n":["ast","ast","invoke","invoke_tracing","logger","main","ast","init_logger","init_tracing"],"q":[[0,"air_interpreter_server"],[6,"air_interpreter_server::ast"],[7,"air_interpreter_server::logger"],[9,"alloc::string"],[10,"alloc::vec"],[11,"air_interpreter_interface::run_parameters"],[12,"air_interpreter_interface::interpreter_outcome"],[13,"log"],[14,"core::option"]],"d":["","","","","","","Parse AIR script and return it as minified JSON","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[0,[1,1],[[1,[3,[2]],[3,[2]],4,[3,[2]]],5],[[1,[3,[2]],[3,[2]],4,[3,[2]],1,2],5],0,[[]],[1,1],[[[7,[6]]]],[[1,2]]],"c":[],"p":[[3,"String",9],[15,"u8"],[3,"Vec",10],[3,"RunParameters",11],[3,"InterpreterOutcome",12],[4,"LevelFilter",13],[4,"Option",14]]},\
"air_interpreter_signatures":{"doc":"","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["PublicKey","Signature","SignatureStore","SignatureTracker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","hash","into","into","into","into","into_signature","is_empty","merge","new","new","put","register","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip"],"q":[[0,"air_interpreter_signatures"],[75,"core::clone"],[76,"core::hash"],[77,"core::cmp"],[78,"serde::de"],[79,"core::result"],[80,"serde::de"],[81,"core::fmt"],[82,"fluence_keypair::signature"],[83,"core::marker"],[84,"core::borrow"],[85,"core::option"],[86,"core::hash"],[87,"fluence_keypair::error"],[88,"alloc::boxed"],[89,"core::convert"],[90,"air_interpreter_cid"],[91,"serde::ser"],[92,"serde::ser"],[93,"fluence_keypair::error"]],"d":["An opaque serializable representation of a public key.","An opaque serializable representation of signature key.","A dictionary-like structure that stores peer public keys …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,7,6,1,2,7,6,1,2,6,1,2,6,7,6,1,2,1,2,6,1,2,1,2,1,2,7,6,1,1,2,2,7,6,6,1,1,2,7,6,7,6,6,7,6,6,7,1,2,6,1,2,6,1,2,7,6,1,2,7,6,1,2,7,6,1,1,2,7,6],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[[6,[[0,[3,4,5]],3]]],[[6,[[0,[3,4,5]],3]]]],[[]],[[]],[[]],[[],7],[[],[[6,[[0,[4,5]]]]]],[1],[2],[8,[[9,[1]]]],[8,[[9,[2]]]],[8,[[9,[[6,[[0,[10,4,5]],10]]]]]],[[1,1],11],[[2,2],11],[[],11],[[],11],[[1,12],13],[[2,12],13],[[7,12],13],[[[6,[[0,[14,4,5]],14]],12],13],[15,1],[[]],[16,2],[[]],[[]],[[]],[[[6,[[18,[[0,[4,5,17]]]],[0,[4,5]]]],[0,[4,5,17]]],19],[[1,20]],[[]],[[]],[[]],[[]],[[7,21,22],[[9,[2,23]]]],[[[6,[[0,[4,5]]]]],11],[[[6,[[0,[4,5]]]],[6,[[0,[4,5]]]]],[[6,[[0,[4,5]]]]]],[[],7],[[],[[6,[[0,[4,5]]]]]],[[[6,[[0,[4,5]]]],[0,[4,5]]]],[[7,[25,[[24,[21]]]],26]],[[1,27],9],[[2,27],9],[[[6,[[0,[28,4,5]],28]],27],9],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],29],[[],29],[[],29],[[],29],[[1,[0,[28,17]],16],[[9,[30]]]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"PublicKey",0],[3,"Signature",0],[8,"Clone",75],[8,"Hash",76],[8,"Eq",77],[3,"SignatureStore",0],[3,"SignatureTracker",0],[8,"Deserializer",78],[4,"Result",79],[8,"Deserialize",78],[15,"bool"],[3,"Formatter",80],[6,"Result",80],[8,"Debug",80],[4,"PublicKey",81],[4,"Signature",82],[8,"Sized",83],[8,"Borrow",84],[4,"Option",85],[8,"Hasher",76],[15,"str"],[4,"KeyPair",86],[4,"SigningError",87],[3,"Box",88],[8,"Into",89],[3,"CID",90],[8,"Serializer",91],[8,"Serialize",91],[3,"TypeId",92],[4,"VerificationError",87]]},\
"air_lambda_ast":{"doc":"","t":"NNNNENENENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["ArrayAccess","Error","FieldAccessByName","FieldAccessByScalar","Functor","Functor","LambdaAST","Length","ValueAccessor","ValuePath","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_functor","into","into","into","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from_accessors","try_into","try_into","try_into","type_id","type_id","type_id","field_name","idx","scalar_name"],"q":[[0,"air_lambda_ast"],[63,"air_lambda_ast::ValueAccessor"],[66,"serde::de"],[67,"core::result"],[68,"core::fmt"],[69,"core::fmt"],[70,"alloc::string"],[71,"alloc::vec"],[72,"non_empty_vec"],[73,"core::any"]],"d":["","","","","","Various functors that could applied to a value.","","Returns a length of a value if this value has array type …","","Each value in AIR could be represented as a tree and this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,2,2,2,0,1,0,3,0,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,2,3,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,14,15,16],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[4,[[5,[1]]]],[4,[[5,[2]]]],[4,[[5,[3]]]],[[1,1],6],[[2,2],6],[[3,3],6],[[],6],[[],6],[[],6],[[1,7],8],[[1,7],8],[[2,7],8],[[2,7],8],[[3,7],8],[[3,7],8],[[]],[[]],[[]],[3,1],[[]],[[]],[[]],[[1,9],5],[[2,9],5],[[3,9],5],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],5],[[],5],[[],5],[[[11,[2]]],[[5,[1,12]]]],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],0,0,0],"c":[],"p":[[4,"LambdaAST",0],[4,"ValueAccessor",0],[4,"Functor",0],[8,"Deserializer",66],[4,"Result",67],[15,"bool"],[3,"Formatter",68],[6,"Result",68],[8,"Serializer",69],[3,"String",70],[3,"Vec",71],[3,"EmptyError",72],[3,"TypeId",73],[13,"FieldAccessByName",63],[13,"ArrayAccess",63],[13,"FieldAccessByScalar",63]]},\
"air_lambda_parser":{"doc":"","t":"NNNNENEDNENENNNNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["ArrayAccess","Error","FieldAccessByName","FieldAccessByScalar","Functor","Functor","LambdaAST","LambdaASTLexer","LambdaError","LambdaParserError","Length","LexerError","LexerError","ParseError","ParseIntError","RecoveryErrors","UnexpectedSymbol","ValueAccessor","ValuePath","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_functor","into","into","into","into","into","into","into_iter","new","next","next_token","parse","serialize","serialize","serialize","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_accessors","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","field_name","idx","scalar_name"],"q":[[0,"air_lambda_parser"],[119,"air_lambda_parser::ValueAccessor"],[122,"serde::de"],[123,"core::result"],[124,"core::fmt"],[125,"core::fmt"],[126,"lalrpop_util"],[127,"core::option"],[128,"serde::ser"],[129,"core::error"],[130,"alloc::string"],[131,"alloc::alloc"],[132,"non_empty_vec"],[133,"core::any"]],"d":["","","","","","Various functors that could applied to a value.","","","","","Returns a length of a value if this value has array type …","","","","","","","","Each value in AIR could be represented as a tree and this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Parse AIR lambda ast to <code>LambdaAST</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,2,2,2,0,1,0,0,5,0,4,0,5,5,3,5,3,0,1,1,17,2,3,4,5,1,17,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,4,1,2,3,4,5,1,2,3,4,5,1,1,2,2,3,3,4,4,5,5,1,17,2,3,4,5,5,5,5,1,1,17,2,3,4,5,17,17,17,17,0,1,2,4,3,5,1,2,3,4,5,1,2,3,4,5,1,17,2,3,4,5,1,1,17,2,3,4,5,1,17,2,3,4,5,25,26,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[6,[[7,[1]]]],[6,[[7,[2]]]],[6,[[7,[4]]]],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[1,9],[[7,[10]]]],[[1,9],[[7,[10]]]],[[2,9],[[7,[10]]]],[[2,9],[[7,[10]]]],[[3,9],11],[[3,9],11],[[4,9],[[7,[10]]]],[[4,9],[[7,[10]]]],[[5,9],11],[[5,9],11],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[12,0,3]]],5],[3,5],[[[15,[[14,[12,0,3]]]]],5],[4,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,17],[17,18],[17,[[18,[[7,[3]]]]]],[16,[[7,[1,5]]]],[[1,19],7],[[2,19],7],[[4,19],7],[3,[[18,[20]]]],[5,[[18,[20]]]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[15,[2,22]]],[[7,[1,23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0],"c":[],"p":[[4,"LambdaAST",0],[4,"ValueAccessor",0],[4,"LexerError",0],[4,"Functor",0],[4,"LambdaParserError",0],[8,"Deserializer",122],[4,"Result",123],[15,"bool"],[3,"Formatter",124],[3,"Error",124],[6,"Result",124],[15,"usize"],[4,"ParseError",125],[3,"ErrorRecovery",125],[3,"Vec",126],[15,"str"],[3,"LambdaASTLexer",0],[4,"Option",127],[8,"Serializer",128],[8,"Error",129],[3,"String",130],[3,"Global",131],[3,"EmptyError",132],[3,"TypeId",133],[13,"FieldAccessByName",119],[13,"ArrayAccess",119],[13,"FieldAccessByScalar",119]]},\
"air_log_targets":{"doc":"","t":"RRRRRRRRRRR","n":["DATA_CACHE","EXECUTED_STATE_CHANGING","EXECUTED_TRACE_MERGE","INSTRUCTION","JOIN_BEHAVIOUR","NEW_EXECUTED_TRACE","NEXT_PEER_PKS","RUN_PARAMS","SUBGRAPH_COMPLETE","SUBGRAPH_ELEMENTS","TARGET_MAP"],"q":[[0,"air_log_targets"]],"d":["Print out data cache at the beginning of each instruction …","Print out state of data cache at the beginning of each …","Print out logs at the executed states merging stage.","Print out each instruction name at the beginning of its …","Print log if call is postponed due the join behaviour.","Print out state of data cache at the beginning of each …","Print out next_peer_pks at the beginning of each …","Print out running arguments and params of a script.","Print out subgraph_complete value at the beginning of each …","Print out count of element in the current subgraph at the …","This map should be used by rust-sdk logger that allows …"],"i":[0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"air_parser":{"doc":"","t":"DDDDLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLFLLLLLLLLLLLLLLLLLLLLDNEDNENNDNEDNDNDNNNNNDNNNNNDNDNNNNDNNNNNNNNNNNNENNDNEDNDNEEENNNEDNNNNNNNNNNNDNDNDNDNEDNNDNENNDNIEEDNNNNNNNNNNNDNNNNNNDNDDNNNDNENNNNDNNDNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMMMMMMKLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["AIRLexer","AIRParser","AirPos","VariableValidator","add","ast","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","deserialize","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into_iter","make_user_error","new","new","new","next","next_token","parse","parse","partial_cmp","serialize","sub","sub","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Ap","Ap","ApArgument","ApMap","ApMap","ApResult","Boolean","Boolean","Call","Call","CallOutputValue","Canon","Canon","CanonMap","CanonMap","CanonStream","CanonStream","CanonStream","CanonStream","CanonStream","CanonStream","CanonStreamMap","CanonStreamMap","CanonStreamMap","CanonStreamMap","CanonStreamMap","CanonStreamMap","CanonStreamMapScalar","CanonStreamMapScalar","CanonStreamMapWithLambda","CanonStreamMapWithLambda","CanonStreamMapWithLambda","CanonStreamMapWithLambda","CanonStreamMapWithLambda","CanonStreamWithLambda","CanonStreamWithLambda","CanonStreamWithLambda","CanonStreamWithLambda","CanonStreamWithLambda","CanonStreamWithLambda","EmptyArray","EmptyArray","EmptyArray","Error","Error","Error","Error","Fail","Fail","Float","FoldScalar","FoldScalar","FoldScalarIterable","FoldStream","FoldStream","FoldStreamMap","FoldStreamMap","ImmutableValue","ImmutableVariable","ImmutableVariableWithLambda","InitPeerId","InitPeerId","InitPeerId","Instruction","InstructionErrorAST","Int","Int","LastError","LastError","LastError","Literal","Literal","Literal","Literal","Literal","Literal","Match","Match","MisMatch","MisMatch","Never","Never","New","New","NewArgument","Next","Next","None","Null","Null","Number","Number","Number","Par","Par","PeerIDErrorLogable","ResolvableToPeerIdVariable","ResolvableToStringVariable","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","Scalar","ScalarWithLambda","ScalarWithLambda","ScalarWithLambda","ScalarWithLambda","ScalarWithLambda","ScalarWithLambda","ScalarWithLambda","Seq","Seq","Span","Stream","Stream","Stream","Stream","StreamMap","StreamMap","StreamMapKeyClause","TTL","TTL","Timestamp","Timestamp","Triplet","Variable","VariableWithLambda","Xor","Xor","args","argument","argument","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canon_stream","canon_stream","canon_stream","canon_stream_map","canon_stream_map","canon_stream_map","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_position","contains_span","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_name","hash","instruction","instruction","instruction","instruction","instruction","instruction","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iterable","iterable","iterable","iterator","iterator","iterator","iterator","key","lambda","lambda","lambda","lambda","last_instruction","last_instruction","last_instruction","left","left_value","left_value","lens","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","log_errors_with_peer_id","map","name","name","name","name","name","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","output","partial_cmp","peer_id","peer_id","peer_id","peer_id","position","position","position","position","position","position","position","position","result","right","right_value","right_value","scalar","scalar","scalar","scalar","scalar","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_id","span","span","span","span","stream","stream","stream","stream_map","stream_map","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","triplet","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","error_message","ret_code"],"q":[[0,"air_parser"],[66,"air_parser::ast"],[965,"air_parser::ast::Fail"],[967,"core::cmp"],[968,"serde::de"],[969,"core::result"],[970,"core::fmt"],[971,"core::fmt"],[972,"core::option"],[973,"alloc::boxed"],[974,"alloc::string"],[975,"lalrpop_util"],[976,"alloc::vec"],[977,"core::iter::traits::collect"],[978,"lalrpop_util"],[979,"core::any"],[980,"air_lambda_ast::ast"],[981,"core::ops::range"],[982,"alloc::rc"]],"d":["","","Character position in the AIR script text.","Intermediate implementation of variable validator.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Parse AIR <code>source_code</code> to <code>Box&lt;Instruction&gt;</code>","","","","","","","","","","","","","","","","","","","","","(ap argument result)","","","(ap key value %map)","","","","","(call (peer part of a triplet: PeerPart) (function part of …","","","(canon peer_id $stream #canon_stream)","","(canon peer_id %stream_map #%canon_stream_map)","","A canonicalized stream without a lambda.","","","","","","A canonicalized stream map without a lambda.","","","","","","(canon peer_id %stream_map scalar)","","A canonicalized stream map with a lambda.","","","","","A canonicalized stream with a lambda.","","","","","","","","","","","","","(fail 1337 “error message”) (fail %last_error%) (fail …","","","(fold scalar_iterable iterator instruction)","","","(fold stream_iterable iterator instruction)","","(fold stream_map_iterable iterator instruction)","","Represents all immutable values that is possible to set in …","A variable that could be either scalar or stream without …","A variable that could be either scalar or stream with …","","","","","An error wrapper with an optional lens.","","","","","","","","","","","","(match left_value right_value instruction)","","(mismatch left_value right_value instruction)","","(never)","","(new variable instruction)","","","(fold stream_iterable iterator instruction)","","","(null)","","","","","(par instruction instruction)","","","Contains all variable variants that could be resolved to a …","Contains all variable variants that could be resolved to a …","A scalar value without a lambda.","","","","","","","","","","","","A scalar value with a lambda expression.","","","","","","","(seq instruction instruction)","","","A stream without a lambda.","","","","A map based on top of a stream.","","","","","","","Triplet represents a location of the executable code in …","","","(xor instruction instructioneturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,0,0,1,0,12,1,13,3,12,1,13,3,1,3,1,3,1,1,3,1,1,1,1,1,1,3,12,1,1,13,3,1,12,1,13,3,12,0,12,13,3,12,12,0,13,1,1,1,1,1,3,1,12,1,13,3,12,1,13,3,12,1,13,3,0,15,0,0,15,0,30,32,0,15,0,0,15,0,15,0,32,36,37,24,26,0,32,36,37,24,26,0,15,0,27,28,32,36,0,27,28,32,34,59,30,32,36,30,32,15,59,0,15,35,0,15,0,0,15,0,15,0,0,0,27,30,32,0,0,34,35,30,32,59,27,28,30,32,34,59,0,15,0,15,0,15,0,15,0,0,15,31,0,15,0,30,32,0,15,0,0,0,0,27,28,31,32,33,34,36,37,59,24,26,0,27,28,32,34,36,59,0,15,0,0,31,33,37,0,37,0,30,32,30,32,0,30,30,0,15,48,49,65,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,24,26,51,24,26,52,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,24,26,45,46,47,47,47,47,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,31,33,36,37,51,52,53,59,63,64,66,38,39,40,41,42,43,44,24,26,45,46,47,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,15,15,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,38,38,39,39,40,40,41,41,42,42,43,43,44,44,24,24,26,26,45,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,47,29,47,57,58,60,61,62,65,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,60,61,62,60,61,62,63,50,26,39,43,44,60,61,62,47,57,58,46,69,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,50,33,37,24,26,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,38,39,40,41,42,43,44,45,46,47,48,47,29,51,52,53,38,39,40,41,42,43,44,45,49,47,57,58,31,33,24,26,53,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,29,60,61,62,65,31,33,51,52,53,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,48,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,27,28,29,30,31,32,33,34,35,36,37,15,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,38,39,40,41,42,43,44,24,26,45,46,47,50,70,70],"f":[0,0,0,0,[[1,2]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[[]],[[]],[[1,1],4],[[],1],[[],3],[5,[[6,[1]]]],[[1,1],7],[[1,2],7],[[],7],[[1,8],9],[[1,8],9],[[3,8],9],[[]],[[]],[2,1],[[]],[[]],[[1,10]],[[]],[[]],[[]],[[]],[[]],0,[11,12],[[],13],[[],3],[12,14],[12,[[14,[[6,[0]]]]]],[11,[[6,[[16,[15]],17]]]],[[13,11,[19,[[18,[1,0,0]]]],3,20],[[6,[[16,[15]],[21,[1,0,0]]]]]],[[1,1],[[14,[4]]]],[[1,22],6],[[1,1]],[[1,2]],[[]],[[]],[[],17],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,1],24],[[11,25,1],26],0,[[11,1],24],[[11,25,1],26],0,[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[24,24],[26,26],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,47],4],[[47,1],7],[[47,47],7],[5,[[6,[27]]]],[5,[[6,[28]]]],[5,[[6,[29]]]],[5,[[6,[30]]]],[5,[[6,[32]]]],[5,[[6,[33]]]],[5,[[6,[34]]]],[5,[[6,[35]]]],[5,[[6,[36]]]],[5,[[6,[37]]]],[5,[[6,[38]]]],[5,[[6,[39]]]],[5,[[6,[40]]]],[5,[[6,[41]]]],[5,[[6,[42]]]],[5,[[6,[43]]]],[5,[[6,[44]]]],[5,[[6,[24]]]],[5,[[6,[26]]]],[5,[[6,[45]]]],[5,[[6,[46]]]],[5,[[6,[47]]]],[[27,27],7],[[28,28],7],[[29,29],7],[[30,30],7],[[31,31],7],[[32,32],7],[[33,33],7],[[34,34],7],[[35,35],7],[[36,36],7],[[37,37],7],[[15,15],7],[[48,48],7],[[49,49],7],[[50,50],7],[[51,51],7],[[52,52],7],[[53,53],7],[[54,54],7],[[55,55],7],[[56,56],7],[[57,57],7],[[58,58],7],[[59,59],7],[[60,60],7],[[61,61],7],[[62,62],7],[[63,63],7],[[64,64],7],[[65,65],7],[[66,66],7],[[38,38],7],[[39,39],7],[[40,40],7],[[41,41],7],[[42,42],7],[[43,43],7],[[44,44],7],[[24,24],7],[[26,26],7],[[45,45],7],[[46,46],7],[[47,47],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[27,8],9],[[27,8],9],[[28,8],9],[[28,8],9],[[29,8],9],[[29,8],9],[[30,8],9],[[30,8],9],[[31,8],9],[[31,8],9],[[32,8],9],[[32,8],9],[[33,8],9],[[33,8],9],[[34,8],9],[[34,8],9],[[35,8],9],[[35,8],9],[[36,8],9],[[36,8],9],[[37,8],9],[[37,8],9],[[15,8],9],[[15,8],9],[[48,8],9],[[48,8],9],[[49,8],9],[[49,8],9],[[50,8],9],[[50,8],9],[[51,8],9],[[51,8],9],[[52,8],9],[[52,8],9],[[53,8],9],[[53,8],9],[[54,8],9],[[54,8],9],[[55,8],9],[[55,8],9],[[56,8],9],[[56,8],9],[[57,8],9],[[57,8],9],[[58,8],9],[[58,8],9],[[59,8],9],[[59,8],9],[[60,8],9],[[60,8],9],[[61,8],9],[[61,8],9],[[62,8],9],[[62,8],9],[[63,8],9],[[63,8],9],[[64,8],9],[[64,8],9],[[65,8],9],[[65,8],9],[[66,8],9],[[66,8],9],[[38,8],9],[[38,8],9],[[39,8],9],[[39,8],9],[[40,8],9],[[40,8],9],[[41,8],9],[[41,8],9],[[42,8],9],[[42,8],9],[[43,8],9],[[43,8],9],[[44,8],9],[[44,8],9],[[24,8],9],[[24,8],9],[[26,8],9],[[26,8],9],[[45,8],9],[[45,8],9],[[46,8],9],[[47,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[67,[1]]],47],[[]],0,[[47,10]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[26,25],0,0,0,0,0,0,0,0,0,0,[[],7],[48,7],[49,7],[50,7],[51,7],[52,7],[53,7],[54,7],[55,7],[56,7],[57,7],[58,7],[59,7],[60,7],[61,7],[62,7],[63,7],[64,7],[65,7],[66,7],0,[33,11],[37,11],[24,11],[26,11],0,0,0,0,0,0,0,0,[[29,[68,[[19,[30]]]],31],48],[[32,33],49],[[34,32,45],50],[[27,40,41],51],[[27,45,42],52],[[27,45,38],53],[[[16,[15]],[16,[15]]],54],[[[16,[15]],[16,[15]]],55],[[[16,[15]],[16,[15]]],56],[[30,30,[16,[15]]],57],[[30,30,[16,[15]]],58],[[36,38,15,[14,[15]],47],60],[[40,38,15,[14,[15]],47],61],[[45,38,15,[14,[15]],47],62],[38,63],[[37,[16,[15]],47],65],[[11,1],38],[[11,25,1],39],[[11,1],40],[[11,1],41],[[11,1],42],[[11,25,1],43],[[11,25,1],44],[[11,1],45],[[[14,[25]]],46],[[1,1],47],0,[[47,47],[[14,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,1],31],[[11,1],33],[[11,1],24],[[11,25,1],26],0,[[27,22],6],[[28,22],6],[[29,22],6],[[30,22],6],[[31,22],6],[[32,22],6],[[33,22],6],[[34,22],6],[[35,22],6],[[36,22],6],[[37,22],6],[[15,22],6],[[48,22],6],[[49,22],6],[[50,22],6],[[51,22],6],[[52,22],6],[[53,22],6],[[54,22],6],[[55,22],6],[[56,22],6],[[57,22],6],[[58,22],6],[[59,22],6],[[60,22],6],[[61,22],6],[[62,22],6],[[63,22],6],[[64,22],6],[[65,22],6],[[66,22],6],[[38,22],6],[[39,22],6],[[40,22],6],[[41,22],6],[[42,22],6],[[43,22],6],[[44,22],6],[[24,22],6],[[26,22],6],[[45,22],6],[[46,22],6],[[47,22],6],0,0,0,0,0,[[11,1],31],[[11,1],33],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0],"c":[],"p":[[3,"AirPos",0],[15,"usize"],[3,"VariableValidator",0],[4,"Ordering",967],[8,"Deserializer",968],[4,"Result",969],[15,"bool"],[3,"Formatter",970],[6,"Result",970],[8,"Hasher",971],[15,"str"],[3,"AIRLexer",0],[3,"AIRParser",0],[4,"Option",972],[4,"Instruction",66],[3,"Box",973],[3,"String",974],[3,"ErrorRecovery",975],[3,"Vec",976],[8,"IntoIterator",977],[4,"ParseError",975],[8,"Serializer",978],[3,"TypeId",979],[4,"ImmutableVariable",66],[4,"LambdaAST",980],[4,"ImmutableVariableWithLambda",66],[4,"ResolvableToPeerIdVariable",66],[4,"ResolvableToStringVariable",66],[3,"Triplet",66],[4,"ImmutableValue",66],[4,"CallOutputValue",66],[4,"ApArgument",66],[4,"ApResult",66],[4,"StreamMapKeyClause",66],[4,"Number",66],[4,"FoldScalarIterable",66],[4,"NewArgument",66],[3,"Scalar",66],[3,"ScalarWithLambda",66],[3,"Stream",66],[3,"CanonStream",66],[3,"CanonStreamMap",66],[3,"CanonStreamWithLambda",66],[3,"CanonStreamMapWithLambda",66],[3,"StreamMap",66],[3,"InstructionErrorAST",66],[3,"Span",66],[3,"Call",66],[3,"Ap",66],[3,"ApMap",66],[3,"Canon",66],[3,"CanonMap",66],[3,"CanonStreamMapScalar",66],[3,"Seq",66],[3,"Par",66],[3,"Xor",66],[3,"Match",66],[3,"MisMatch",66],[4,"Fail",66],[3,"FoldScalar",66],[3,"FoldStream",66],[3,"FoldStreamMap",66],[3,"Next",66],[3,"Never",66],[3,"New",66],[3,"Null",66],[3,"Range",981],[3,"Rc",982],[8,"PeerIDErrorLogable",66],[13,"Literal",965]]},\
"air_test_framework":{"doc":"","t":"CAAAAANNNNNNNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMGDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLNEDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLNNNEGIDNNNNNNLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AirScriptExecutor","asserts","ephemeral","execution","services","transform","Behaviour","Behaviour","Error","Error","Map","Map","Ok","Ok","SeqError","SeqError","SeqOk","SeqOk","ServiceDefinition","ServiceTagName","as_component_extern_name","as_component_extern_name","as_ref","behaviour","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","from","from","from","from","from_str","from_str","get_fd_flags","get_fd_flags","init","init","into","into","map","new_set_fd_flags","new_set_fd_flags","ok","seq_error","seq_ok","set_fd_flags","set_fd_flags","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","call_map","call_map","call_number_seq","call_number_seq","Data","Network","Peer","PeerId","add_peer","add_peer_env","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","empty","ensure_peer","eq","equivalent","equivalent","fail_peer_for","fmt","fmt","from","from","from","from","from","from_peers","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_peer_env","get_peers","hash","init","init","init","into","into","into","neighborhood","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_peer_failed","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unfail_peer_for","vzip","vzip","vzip","Added","AlterState","Neighborhood","PeerEnv","Removed","alter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","extend_neighborhood","fmt","from","from","from","get_alter_state","get_fd_flags","get_fd_flags","get_fd_flags","get_neighborhood","get_neighborhood_mut","init","init","init","into","into","into","into_iter","into_iter","is_failed","is_reachable","is_reachable","iter","iter","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","remove_from_neighborhood","set_failed","set_fd_flags","set_fd_flags","set_fd_flags","set_target_unreachable","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unalter","unset_target_unreachable","vzip","vzip","vzip","AirScriptExecutor","borrow","borrow_mut","debug","deref","deref_mut","drop","execute_all","execute_one","execution_iter","from","from_annotated","from_network","from_transformed_air_script","get_fd_flags","init","into","new","new_set_fd_flags","set_fd_flags","try_from","try_into","type_id","vzip","Array","Bool","Empty","FunctionOutcome","JValue","MarineService","MarineServiceHandle","NotDefined","Null","Number","Object","ServiceResult","String","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone_into","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_service_result","from_value","get_fd_flags","get_fd_flags","init","init","into","into","new_set_fd_flags","new_set_fd_flags","set_fd_flags","set_fd_flags","to_handle","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"air_test_framework"],[6,"air_test_framework::asserts"],[81,"air_test_framework::asserts::ServiceDefinition"],[85,"air_test_framework::ephemeral"],[164,"air_test_framework::ephemeral::neighborhood"],[243,"air_test_framework::execution"],[267,"air_test_framework::services"],[321,"wasm_encoder::component::imports"],[322,"wasm_encoder::component::imports"],[323,"avm_interface::call_service_result"],[324,"core::fmt"],[325,"core::fmt"],[326,"core::fmt"],[327,"std::io::error"],[328,"alloc::string"],[329,"std::collections::hash::map"],[330,"io_lifetimes::portability"],[331,"system_interface::fs::fd_flags"],[332,"air_test_utils::test_runner"],[333,"alloc::rc"],[334,"core::iter::traits::collect"],[335,"air_test_utils::wasm_test_runner"],[336,"core::convert"],[337,"core::hash"],[338,"core::cmp"],[339,"core::marker"],[340,"alloc::vec"],[341,"core::hash"],[342,"core::option"],[343,"core::iter::traits::iterator"],[344,"core::hash"],[345,"avm_interface::raw_outcome"],[346,"air_test_utils::test_runner"]],"d":["","","","","","","Some known service by name: “echo”, “unit” (more …","Some known service by name: “echo”, “unit” (more …","Simple service that returns same call result (i.e. may …","Simple service that returns same call result (i.e. may …","Maps first argument to a value","Maps first argument to a value","Simple service that returns same value","Simple service that returns same value","","","Service that may return a new value on subsequent call.  …","Service that may return a new value on subsequent call.  …","Service definition in the testing framework comment DSL.","Auto-generated discriminant enum variants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a peer with default neighborhood.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Neighbors of particular node, including set of nodes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A executor for an AIR script. Several executors may share …","","","","","","","Process all queued datas, panicing on error.","Process one queued data, panicing if it is unavalable or …","Return Iterator for handling all the queued datas for …","Returns the argument unchanged.","Simple constructor where everything is generated from the …","","","","","Calls <code>U::from(self)</code>.","Create execution from the annotated air script.","","","","","","","Represents a JSON array.","Represents a JSON boolean.","","Somewhat modified type from fluence.  The Duration defines …","","A mocked Marine service.","","","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","","Represents a JSON string.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,3,5,3,5,3,5,3,5,3,5,3,5,0,0,3,3,3,5,3,5,3,5,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,3,5,5,5,3,5,3,3,3,5,3,5,3,5,3,5,3,5,5,3,5,5,5,5,3,5,3,5,3,3,5,3,5,3,5,3,5,50,51,50,51,0,0,0,0,23,23,25,23,27,27,25,23,27,27,27,25,23,27,25,23,27,25,23,27,25,23,27,23,23,27,27,27,23,25,27,25,23,27,27,27,23,25,23,27,27,23,23,27,25,23,27,25,23,27,0,25,23,27,25,23,27,25,23,27,23,27,25,23,27,25,23,27,25,23,27,23,25,23,27,44,0,0,0,44,43,43,36,44,43,36,44,44,44,43,36,44,43,36,44,43,36,44,43,36,44,44,44,44,36,44,43,36,44,43,43,36,44,36,36,43,36,44,43,36,44,43,36,36,43,36,43,36,43,36,43,36,44,36,36,43,36,44,43,44,43,36,44,43,36,44,43,36,44,43,43,43,36,44,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,17,17,49,0,0,0,0,49,17,17,17,49,17,49,41,49,41,52,41,41,41,49,41,49,41,49,41,49,41,49,49,41,49,49,49,41,49,41,49,41,49,41,49,41,52,41,49,41,49,41,49,41,49,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[3,4],0,[[]],[[]],[[]],[[]],[[5,6],7],[3,3],[5,5],[[]],[[]],[8,[[10,[9]]]],[8,[[10,[9]]]],[11],[11],[11],[11],[11],[11],[[3,3],12],[[5,5],12],[[],12],[[],12],[[],12],[[],12],[7,5],[[3,8],13],[[5,8],13],[5,3],[[]],[5,3],[[]],[4,[[10,[3]]]],[4,[[10,[5]]]],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[],11],[[],11],[[]],[[]],[[[18,[16,17]]],5],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[17,5],[[[18,[16,7]]],5],[[[18,[16,17]]],5],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[[]],[[]],[4,[[10,[3]]]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,[[[24,[[23,[22]]]],[25,[22]]]],[[[24,[[23,[22]]]],[25,[22]],26]],[[]],[[]],[[]],[27,4],[[]],[[]],[[]],[27,27],[[]],[8,[[10,[9]]]],[8,[[10,[9]]]],[8,[[10,[9]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[24,[[23,[28]]]]]],[[[24,[[23,[22]]]],[29,[27]]]],[[27,27],12],[[],12],[[],12],[[[23,[22]],[0,[30,31,32]],[29,[27]]]],[[[25,[22]],8],13],[[27,8],13],[[]],[[]],[[]],[16,27],[4,27],[[[33,[[25,[22]]]]],[[24,[[23,[22]]]]]],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[[0,[30,32]],34],35],[[[23,[22]],[0,[30,31,32]]],[[38,[[24,[[37,[[36,[22]]]]]]]]]],[[[23,[22]]],39],[[27,40]],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,[[[29,[27]],[24,[[42,[41]]]]],[[25,[22]]]],[[39,[33,[41]]],[[24,[[23,[22]]]]]],[[[29,[4]]],27],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[[[23,[22]],[0,[30,31,32]],12]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[[23,[22]],[0,[30,31,32]],[0,[30,31,32]]]],[[]],[[]],[[]],0,0,0,0,0,[[[43,[22]],[29,[27]],44]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[[]],[8,[[10,[9]]]],[8,[[10,[9]]]],[8,[[10,[9]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[44,44],12],[[],12],[[],12],[[[36,[22]],39]],[[44,8],13],[[]],[[]],[[]],[[[43,[22]],[0,[31,30,32]]],[[38,[44]]]],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[[36,[22]]],[[43,[22]]]],[[[36,[22]]],[[43,[22]]]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[[43,[22]]]],[[[36,[22]]]],[[[36,[22]]],12],[[[43,[22]],[0,[31,30,32]]],12],[[[36,[22]],45],12],[[[43,[22]]],39],[[[36,[22]]],39],[[[24,[[23,[22]]]]],[[43,[22]]]],[[[25,[22]],[24,[[23,[22]]]]],[[36,[22]]]],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[[[36,[22]],39]],[[[36,[22]],12]],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[[[43,[22]],[29,[27]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[[43,[22]],[0,[31,30,32]]]],[[[43,[22]],[0,[31,30,32]]]],[[]],[[]],[[]],0,[[]],[[]],[8,[[10,[9]]]],[11],[11],[11],[[[46,[22]],[0,[31,30,32]]],[[38,[[33,[47]]]]]],[[[46,[22]],[0,[31,30,32]]],[[38,[47]]]],[[[46,[22]],[0,[31,30,32]]],[[38,[39]]]],[[]],[[48,4],[[10,[[46,[28]],16]]]],[[48,[24,[[23,[22]]]],4],[[10,[[46,[22]],16]]]],[[48,[0,[22]]],[[10,[[46,[22]],16]]]],[[],[[10,[14,15]]]],[[],11],[[]],[[48,[33,[41]],26,4],[[10,[[46,[22]],16]]]],[14,[[10,[[20,[19]],15]]]],[[[20,[19]]],[[10,[15]]]],[[],10],[[],10],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[6,49],[[41,6],49],[41,41],[[]],[8,[[10,[9]]]],[8,[[10,[9]]]],[11],[11],[11],[11],[11],[11],[[49,8],13],[[]],[[]],[7,49],[17,49],[[],[[10,[14,15]]]],[[],[[10,[14,15]]]],[[],11],[[],11],[[]],[[]],[14,[[10,[[20,[19]],15]]]],[14,[[10,[[20,[19]],15]]]],[[[20,[19]]],[[10,[15]]]],[[[20,[19]]],[[10,[15]]]],[32,41],[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[]],[[]]],"c":[],"p":[[4,"ComponentExternName",321],[4,"ComponentExternName",321],[4,"ServiceTagName",6],[15,"str"],[4,"ServiceDefinition",6],[3,"CallRequestParams",322],[3,"CallServiceResult",323],[3,"Formatter",324],[3,"Error",324],[4,"Result",325],[15,"usize"],[15,"bool"],[6,"Result",324],[3,"FdFlags",326],[3,"Error",327],[3,"String",328],[6,"JValue",267],[3,"HashMap",329],[8,"AsFilelike",330],[3,"SetFdFlags",326],[3,"TypeId",331],[8,"AirRunner",332],[3,"Network",85],[3,"Rc",333],[3,"Peer",85],[8,"IntoIterator",334],[3,"PeerId",85],[3,"WasmAirRunner",335],[8,"Into",336],[8,"Hash",337],[8,"Eq",338],[8,"Sized",339],[3,"Vec",340],[8,"BuildHasher",337],[15,"u64"],[3,"PeerEnv",164],[3,"RefCell",341],[4,"Option",342],[8,"Iterator",343],[8,"Hasher",337],[3,"MarineServiceHandle",267],[15,"slice"],[3,"Neighborhood",164],[4,"AlterState",164],[8,"Deref",344],[3,"AirScriptExecutor",243],[3,"RawAVMOutcome",345],[3,"TestRunParameters",332],[4,"FunctionOutcome",267],[13,"SeqOk",81],[13,"SeqError",81],[8,"MarineService",267]]},\
"air_test_utils":{"doc":"","t":"DDGEDDGDNNDNNNNNNNNRNNNDGNEGNEGDDNNDEDDDDINNQDNNEDNNNNNNGDDDGGENNNNEEDNNGNNNNNNNNNNDDNNGEDNNNNNNNNNNNNNNNDENDNNNNDGDNNNNNNNNNSSEDOLLLLLMMMMMOMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAOLMMFLLOLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMFMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLALLMMLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFMAMMLLLMMMMMMMLMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLMMMLALMFMLFFAOKLMMMMMMOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKOOLLLLMMAMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMMMMMMMDDLLLMLMLLLLMLLLLLLLMMLLLLLGNNNELLLLLLFFLLLLLFLFFFLLLFLDDDFFLLLLLLLFFFLLLLLLLLLLLLLLFFLLLLFLLLLLLLLLLLLLLLLLLFLMFMLLLLLLLLFLLFFMMLLLLLLLLLLFMLLLFDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGEDDGDNNDNNNNNNRNNNDGNEGNEDDNNDEDDDDINNQDNNEDNNNNNNGDDDGGENNNNEEDNNNNNNNNNDDNNGENNNNNNNNNNNNNNNDENDNNNDGDNNNNNNNNNEDMMMMMMAMMMMMMKKMMMMFMKMMMMMMMMMKMFOMMMMMMMMMMMAMMMMMMMMAKMMMMMMMMMKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDMMMMMDDMMMMMDLLMLLMLLLLLLLLMLLLLLLLMMLLLLLLLICCCDDCLLLLKLLLLFFLLLLLLLLLLLLLLLLLLLMLLKLLLMMMLLMLLLLLMLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AVM","AVMConfig","AVMDataStore","AVMError","AVMMemoryStats","AVMOutcome","AVMResult","AnomalyData","AnomalyDataSeError","Ap","ApResult","Array","Array","Array","Bool","Boolean","Boolean","ByteArray","ByteArray","CALL_SERVICE_SUCCESS","Call","CallParamsArgsDeFailed","CallParamsTetrapletsDeFailed","CallRequestParams","CallRequests","CallRequestsDeError","CallResult","CallResults","CallResultsSeFailed","CallSeDeErrors","CallServiceClosure","CallServiceFailed","CallServiceResult","Canon","Canon","CanonCidAggregate","CanonResult","CanonResultCidAggregate","CidInfo","CidStore","CidTracker","DataStore","DataStoreError","Err","Error","ErrorAVMOutcome","Executed","Executed","ExecutedState","ExecutionTrace","F32","F32","F64","F64","Failed","Fold","FoldLore","FoldResult","FoldSubTraceLore","GenerationIdx","HostExportedFunc","HostImportDescriptor","HostImportError","I32","I32","I64","I64","IType","IValue","InterpreterData","InterpreterFailed","InvalidUTF8String","JValue","LifterError","Literal","LowererError","MismatchWValues","MismatchWValuesCount","Null","Number","Object","Ok","Par","ParResult","ParticleParameters","PeerId","PeerIdWithCallId","PosType","Provenance","RawAVMOutcome","Record","Record","RecordNotFound","RequestSentBy","RequestSentBy","RunnerError","S16","S16","S32","S32","S64","S64","S8","S8","Scalar","SecurityTetraplet","Sender","ServiceResult","ServiceResultCidAggregate","Stream","String","String","String","SubTraceDesc","TraceLen","TracePos","U16","U16","U32","U32","U64","U64","U8","U8","Unused","VARIANT_COUNT","VARIANT_COUNT","ValueRef","Versions","_trace_value_body","add","add","add_assign","add_assign","add_lambda","air_script","air_wasm_path","argument_hash","argument_types","arguments","assert_next_pks","avm_outcome","avm_runner","begin_pos","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_requests","call_requests","call_results","call_services","call_vm","canon","canon_element_store","canon_result_store","check_error","checked_add","checked_add","checked_call_vm","checked_sub","cid_info","cleanup_data","cleanup_data","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","collect_anomaly_data","current_data","current_peer_id","data","data","data_from_result","data_store","data_version","data_version","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","detect_anomaly","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","error_code","error_handler","error_message","error_message","executed","executed_scalar","executed_service_result","executed_state","executed_stream_stub","executed_unused","execution_time","execution_time","failed","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cid_stores","from_execution_result","from_fd","from_fd","from_filelike","from_filelike","from_grip","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_raw_outcome","from_socketlike","from_socketlike","function_name","function_name","get","get","get","get","get","get_cid","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","get_hash","get_hash","get_mut","get_mut","get_mut","get_unchecked","get_unchecked","get_unchecked_mut","get_unchecked_mut","hash","hash","hash","hash","host_exported_func","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_peer_id","initialize","interpreter_version","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_raw","into_raw_result","is_empty","is_interpreter_succeded","json_path","key_utils","last_call_request_id","left_size","len","literal","literal_tetraplet","logging_mask","lore","max_heap_size","max_memory_size","memory_delta","memory_delta","memory_size","memory_stats","message","native_test_runner","ne_vec","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next","next_peer_pks","next_peer_pks","ok","outcome","output_type","par","parse","partial_cmp","partial_cmp","partial_cmp","particle","particle_id","peer_pk","pop","prelude","prev","prev_data","print_trace","provenance","push","raw_data_from_trace","raw_data_from_trace_with_canon","raw_outcome","rc","read_data","request_sent_by","res_generations","result","ret_code","ret_code","ret_code","right_size","scalar","scalar_tracked","sent_peer_id","sent_peer_id_with_call_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_id","service_id","service_result","service_result_store","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","signatures","size","source","source","store_data","stream","stream_tracked","stub","stub","sub","sub","subtrace_len","subtraces_desc","test_runner","tetraplet","tetraplet","tetraplet_cid","tetraplet_store","tetraplets","timestamp","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_value","trace","trace_from_result","trace_states_count","track_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_get_versions","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unused","value","value_cid","value_pos","value_store","values","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_test_runner","call_params","call_params","call_results","de_error","de_error","error","raw_call_request","se_error","cid","cid","call_id","peer_id","cid","generation","AVMRunner","RawAVMOutcome","borrow","borrow_mut","call","call_requests","call_tracing","data","debug","deref","deref_mut","drop","error_message","from","get_fd_flags","init","into","memory_stats","new","new_set_fd_flags","next_peer_pks","ret_code","set_fd_flags","try_from","try_into","type_id","vzip","ArgTetraplets","Argument","FunctionName","ServiceName","VariableOptionSource","borrow","borrow_mut","debug","deref","deref_mut","drop","echo_call_service","fallible_call_service","from","get_fd_flags","init","into","new_set_fd_flags","return_string_call_service","set_fd_flags","set_variable_call_service","set_variables_call_service","tetraplet_host_function","try_from","try_into","type_id","unit_call_service","vzip","CanonResultAlike","ExecutedCallBuilder","ValueAggregateAlike","_failure_to_value","ap","args","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canon","canon_request","canon_tracked","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","extract_canon_result_cid","extract_service_result_cid","failed","failed_tracked","fmt","fmt","fold","from","from","from","function","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","into","into","into","json_path","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","par","peer","provenance","request_sent_by","result","scalar","scalar_tracked","serialize","serialize","service","set_fd_flags","set_fd_flags","set_fd_flags","simple_value_aggregate_cid","stream","stream_tracked","subtrace_desc","subtrace_lore","tetraplet","tetraplet","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unused","value_aggregate_cid","values","vzip","vzip","vzip","derive_dummy_keypair","NativeAirRunner","borrow","borrow_mut","call","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new","new_set_fd_flags","set_fd_flags","try_from","try_into","type_id","vzip","NEVec","borrow","borrow_mut","clone","clone_into","debug","default","deref","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","fmt","from","get_fd_flags","get_hash","hash","init","into","into_vec","new","new_set_fd_flags","serialize","set_fd_flags","to_owned","try_from","try_into","type_id","vzip","AVM","AVMConfig","AVMDataStore","AVMError","AVMMemoryStats","AVMOutcome","AVMResult","AnomalyData","AnomalyDataSeError","Ap","ApResult","Array","Array","Boolean","Boolean","ByteArray","ByteArray","CALL_SERVICE_SUCCESS","Call","CallParamsArgsDeFailed","CallParamsTetrapletsDeFailed","CallRequestParams","CallRequests","CallRequestsDeError","CallResult","CallResults","CallResultsSeFailed","CallSeDeErrors","CallServiceFailed","CallServiceResult","Canon","Canon","CanonCidAggregate","CanonResult","CanonResultCidAggregate","CidInfo","CidStore","CidTracker","DataStore","DataStoreError","Err","Error","ErrorAVMOutcome","Executed","Executed","ExecutedState","ExecutionTrace","F32","F32","F64","F64","Failed","Fold","FoldLore","FoldResult","FoldSubTraceLore","GenerationIdx","HostExportedFunc","HostImportDescriptor","HostImportError","I32","I32","I64","I64","IType","IValue","InterpreterData","InterpreterFailed","InvalidUTF8String","LifterError","Literal","LowererError","MismatchWValues","MismatchWValuesCount","Ok","Par","ParResult","ParticleParameters","PeerId","PeerIdWithCallId","PosType","Provenance","Record","Record","RecordNotFound","RequestSentBy","RequestSentBy","RunnerError","S16","S16","S32","S32","S64","S64","S8","S8","Scalar","SecurityTetraplet","Sender","ServiceResult","ServiceResultCidAggregate","Stream","String","String","SubTraceDesc","TraceLen","TracePos","U16","U16","U32","U32","U64","U64","U8","U8","Unused","ValueRef","Versions","air_script","air_wasm_path","argument_hash","argument_types","arguments","avm_outcome","avm_runner","begin_pos","call_requests","call_results","canon_element_store","canon_result_store","cid_info","cleanup_data","collect_anomaly_data","current_data","current_peer_id","data","data_store","data_version","data_version","detect_anomaly","error_code","error_handler","error_message","execution_time","execution_time","function_name","function_name","host_exported_func","init_peer_id","initialize","interpreter_version","into_raw_result","json","json_path","last_call_request_id","left_size","logging_mask","lore","max_heap_size","max_memory_size","memory_delta","memory_delta","memory_size","message","ne_vec","next_peer_pks","outcome","output_type","particle","particle_id","peer_pk","prev_data","provenance","raw_outcome","read_data","res_generations","result","ret_code","ret_code","right_size","service_id","service_id","service_result_store","signatures","store_data","subtrace_len","subtraces_desc","tetraplet","tetraplet","tetraplet_cid","tetraplet_store","tetraplets","timestamp","trace","ttl","value","value_cid","value_pos","value_store","values","versions","call_params","call_params","call_results","de_error","de_error","error","raw_call_request","se_error","cid","cid","call_id","peer_id","cid","generation","AVMRunner","RawAVMOutcome","call_requests","data","error_message","next_peer_pks","ret_code","NEVec","RawAVMOutcome","call_requests","data","error_message","next_peer_pks","ret_code","RawAVMOutcome","borrow","borrow_mut","call_requests","clone","clone_into","data","debug","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","error_message","fmt","from","from_interpreter_outcome","get_fd_flags","init","into","new_set_fd_flags","next_peer_pks","ret_code","serialize","set_fd_flags","to_owned","try_from","try_into","type_id","vzip","AirRunner","DefaultAirRunner","NativeAirRunner","ReleaseWasmAirRunner","TestRunParameters","TestRunner","WasmAirRunner","borrow","borrow","borrow_mut","borrow_mut","call","call","call_single","clone","clone_into","create_avm","create_custom_avm","debug","debug","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_init_peer_id","from_timestamp","from_ttl","get_fd_flags","get_fd_flags","init","init","init_peer_id","into","into","new","new","new_set_fd_flags","new_set_fd_flags","override_current_peer_id","particle_id","runner","set_fd_flags","set_fd_flags","timestamp","to_owned","try_from","try_from","try_into","try_into","ttl","type_id","type_id","vzip","vzip","ReleaseWasmAirRunner","WasmAirRunner","borrow","borrow","borrow_mut","borrow_mut","call","call","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_fd_flags","get_fd_flags","init","init","into","into","new","new","new_set_fd_flags","new_set_fd_flags","set_fd_flags","set_fd_flags","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"air_test_utils"],[1294,"air_test_utils::CallSeDeErrors"],[1302,"air_test_utils::Provenance"],[1304,"air_test_utils::Sender"],[1306,"air_test_utils::ValueRef"],[1308,"air_test_utils::avm_runner"],[1335,"air_test_utils::call_services"],[1363,"air_test_utils::executed_state"],[1452,"air_test_utils::key_utils"],[1453,"air_test_utils::native_test_runner"],[1472,"air_test_utils::ne_vec"],[1504,"air_test_utils::prelude"],[1705,"air_test_utils::prelude::CallSeDeErrors"],[1713,"air_test_utils::prelude::Provenance"],[1715,"air_test_utils::prelude::Sender"],[1717,"air_test_utils::prelude::ValueRef"],[1719,"air_test_utils::prelude::avm_runner"],[1726,"air_test_utils::prelude::ne_vec"],[1727,"air_test_utils::prelude::raw_outcome"],[1733,"air_test_utils::raw_outcome"],[1765,"air_test_utils::test_runner"],[1825,"air_test_utils::wasm_test_runner"],[1863,"alloc::string"],[1864,"core::convert"],[1865,"alloc::alloc"],[1866,"alloc::vec"],[1867,"std::collections::hash::map"],[1868,"std::collections::hash::map"],[1869,"core::result"],[1870,"air_interpreter_cid"],[1871,"alloc::rc"],[1872,"air::utils::to_error_code"],[1873,"alloc::string"],[1874,"core::clone"],[1875,"core::cmp"],[1876,"semver"],[1877,"core::fmt"],[1878,"core::fmt"],[1879,"serde::de"],[1880,"core::cmp"],[1881,"core::fmt"],[1882,"it_lilo::lifter::error"],[1883,"it_lilo::lowerer::error"],[1884,"alloc::string"],[1885,"air::execution_step::execution_context::cid_state"],[1886,"air_interpreter_signatures"],[1887,"air_interpreter_signatures"],[1888,"io_lifetimes::portability"],[1889,"io_lifetimes::portability"],[1890,"system_interface::fs::fd_flags"],[1891,"std::io::error"],[1892,"core::hash"],[1893,"core::marker"],[1894,"core::hash"],[1895,"alloc::borrow"],[1896,"io_lifetimes::portability"],[1897,"wast"],[1898,"serde::ser"],[1899,"serde::ser"],[1900,"std::io"],[1901,"air_interpreter_cid"],[1902,"core::any"],[1903,"avm_server::errors"],[1904,"std::path"],[1905,"core::ops::function"],[1906,"core::iter::traits::collect"],[1907,"core::fmt"],[1908,"core::default"],[1909,"fluence_it_types::ne_vec"],[1910,"air_interpreter_interface::interpreter_outcome"]],"d":["","Describes behaviour of the AVM.","","","Return statistic of AVM server Wasm module heap footprint.","","","","This errors are encountered from serialization of data …","","Describes result of applying functor <code>apply</code> to streams.","Represents a JSON array.","An array of values of the same type.","A byte array.","Represents a JSON boolean.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","","Errors encountered while trying to deserialize arguments …","Errors encountered while trying to deserialize tetraplets …","Contains arguments of a call instruction and all other …","","This error is encountered when deserialization pof call …","","","Errors encountered while trying to serialize call results.","","","","Represents an executed host function result.","","","The type Canon trace CID refers to.","Contains ids of element that were on a stream at the …","","","Stores CID to Value corresponance.","","This trait is used for","This errors are encountered from a data store object.","Contains the error value","","","A corresponding call’s been already executed with such …","","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","The call returned a service error.","","This type represents all information in an execution trace …","","Let’s consider an example of trace that could be …","","","","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","The AIR interpreter could be considered as a function …","This error contains interpreter outcome in case when …","","","","","","An error occurred when host functions tries to lift …","An error occurred when a host functions tries to lift …","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Contains the success value","","","Represents parameters obtained from a particle.","","","","","This struct is very similar to AVMOutcome, but keeps …","A record contains record index from interfaces AST.","A record.","","Request was sent to a target node by node with such public …","Request was sent to a target node by node with such public …","This errors are encountered from an AVM runner.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","The call value is stored to a scalar variable.","Describes an origin that set corresponding value.","","","A proof of service result execution result.","The call value is stored to a stream variable.","Represents a JSON string.","A string.","A string.","Descriptor of a subtrace inside execution trace.","","","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","The call value is not stored.","","","","","","","","","","","","Path to a AIR interpreter Wasm file.","Hash of the call arguments.","Type of the closure arguments.","Arguments that should be passed to the function.","","","","Start position in a trace of this subtrace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collected parameters of all met call instructions that …","","","","","","Map CID to a canon element value.","Map CID to a canon result.","","","","","","CID-to-somethings mappings.","Cleanup data that become obsolete.","Cleanup data that become obsolete.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains script data that should be preserved in an …","","","","","Version of this data format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if an anomaly happened and it’s necessary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If Some, this closure is called with error when errors is …","","","","","","","","","","Time of a particle execution (it counts only execution …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Name of a function that returned corresponding value.","Name of a function from service identified by service_id …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This closure will be invoked for corresponding import.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of an interpreter produced this data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Value was produced by applying this <code>json_path</code> to the …","","Last exposed to a peer call request id. All next call …","","","","Create a tetraplet for string literals defined in the …","Mask used to filter logs, for details see <code>log_utf8_string</code> …","","Maximum heap size in bytes available for the interpreter.","Possibly set max memory size for AVM server.","","Memory in bytes AVM linear heap was extended during …","Size of currently used linear memory in bytes. Please note …","Return memory stat of an interpreter heap.","This field contains a JSON-serialized value, not a plain …","","","","","Create AVM with provided config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public keys of peers that should receive data.","","","","Types of output of the closure.","","","","","","","","Id of a peer where corresponding value was set.","","","","","","","","","","","","","","","Resulted JValue returned by a service string.","A error code service or builtin returned, where …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of a service that set corresponding value.","Id of a service that should be called.","","Map CID to a service result aggregate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Signature store.","Returns a size of subtrace that this par describes in …","","","","","","","","","","Length of the subtrace.","Descriptors of a subtrace that are corresponded to the …","","","","The tetraplet of the call result.","Map CID to a tetraplet.","Tetraplets that should be passed to the service.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trace of AIR execution, which contains executed call, par, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to de InterpreterData from slice according to the …","Tries to de only versions part of interpreter data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Please note that <code>unused_tracked</code> does not exist as unused …","","","Position of current value in a trace.","Map CID to value.","","Versions of data and an interpreter produced this data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Create AVM with the provided config.","","","","","","","","","","","","","Manages which source will be used to choose a variable.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","This function takes a JSON DSL-like struct for …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive fake keypair for testing proposes.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","<code>NEVec&lt;T&gt;</code> represents a non-empty <code>Vec&lt;T&gt;</code>. It derefs to <code>Vec&lt;T&gt;</code>","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Converts this NEVec into Vec","Creates a new non-empty vector, based on an inner <code>Vec&lt;T&gt;</code>. …","","","","","","","","","","Describes behaviour of the AVM.","","","Return statistic of AVM server Wasm module heap footprint.","","","","This errors are encountered from serialization of data …","","Describes result of applying functor <code>apply</code> to streams.","An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","","Errors encountered while trying to deserialize arguments …","Errors encountered while trying to deserialize tetraplets …","Contains arguments of a call instruction and all other …","","This error is encountered when deserialization pof call …","","","Errors encountered while trying to serialize call results.","","","Represents an executed host function result.","","","The type Canon trace CID refers to.","Contains ids of element that were on a stream at the …","","","Stores CID to Value corresponance.","","This trait is used for","This errors are encountered from a data store object.","Contains the error value","","","A corresponding call’s been already executed with such …","","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","The call returned a service error.","","This type represents all information in an execution trace …","","Let’s consider an example of trace that could be …","","","","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","The AIR interpreter could be considered as a function …","This error contains interpreter outcome in case when …","","","","","An error occurred when host functions tries to lift …","An error occurred when a host functions tries to lift …","Contains the success value","","","Represents parameters obtained from a particle.","","","","","A record contains record index from interfaces AST.","A record.","","Request was sent to a target node by node with such public …","Request was sent to a target node by node with such public …","This errors are encountered from an AVM runner.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","The call value is stored to a scalar variable.","Describes an origin that set corresponding value.","","","A proof of service result execution result.","The call value is stored to a stream variable.","A string.","A string.","Descriptor of a subtrace inside execution trace.","","","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","The call value is not stored.","","","","Path to a AIR interpreter Wasm file.","Hash of the call arguments.","Type of the closure arguments.","Arguments that should be passed to the function.","","","Start position in a trace of this subtrace.","Collected parameters of all met call instructions that …","","Map CID to a canon element value.","Map CID to a canon result.","CID-to-somethings mappings.","Cleanup data that become obsolete.","","","","Contains script data that should be preserved in an …","","","Version of this data format.","Returns true if an anomaly happened and it’s necessary …","","If Some, this closure is called with error when errors is …","","","Time of a particle execution (it counts only execution …","Name of a function that returned corresponding value.","Name of a function from service identified by service_id …","This closure will be invoked for corresponding import.","","","Version of an interpreter produced this data.","","Construct a <code>serde_json::Value</code> from a JSON literal.","Value was produced by applying this <code>json_path</code> to the …","Last exposed to a peer call request id. All next call …","","Mask used to filter logs, for details see <code>log_utf8_string</code> …","","Maximum heap size in bytes available for the interpreter.","Possibly set max memory size for AVM server.","","Memory in bytes AVM linear heap was extended during …","Size of currently used linear memory in bytes. Please note …","This field contains a JSON-serialized value, not a plain …","","Public keys of peers that should receive data.","","Types of output of the closure.","","","Id of a peer where corresponding value was set.","","","","","","Resulted JValue returned by a service string.","A error code service or builtin returned, where …","","","Id of a service that set corresponding value.","Id of a service that should be called.","Map CID to a service result aggregate.","Signature store.","","Length of the subtrace.","Descriptors of a subtrace that are corresponded to the …","","","The tetraplet of the call result.","Map CID to a tetraplet.","Tetraplets that should be passed to the service.","","Trace of AIR execution, which contains executed call, par, …","","","","Position of current value in a trace.","Map CID to value.","","Versions of data and an interpreter produced this data.","","","","","","","","","","","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","<code>NEVec&lt;T&gt;</code> represents a non-empty <code>Vec&lt;T&gt;</code>. It derefs to <code>Vec&lt;T&gt;</code>","This struct is very similar to AVMOutcome, but keeps …","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","WASM runner that runs release build form benchmarking.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,17,49,0,118,37,42,118,37,42,37,42,0,49,68,68,0,0,68,0,0,68,0,0,0,0,22,49,0,0,0,0,0,0,0,17,139,140,0,38,47,0,0,37,42,37,42,38,49,0,0,0,0,0,0,0,37,42,37,42,0,0,0,17,69,0,69,22,69,69,69,118,118,118,139,49,0,0,36,36,0,0,0,37,42,69,38,47,17,37,42,37,42,37,42,37,42,39,0,0,22,0,39,118,37,42,0,0,0,37,42,37,42,37,42,37,42,39,37,42,0,0,0,1,1,1,1,3,29,101,41,141,30,0,29,0,44,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,5,16,23,29,0,0,22,52,52,0,27,1,0,27,50,140,5,3,29,30,12,16,32,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,29,30,12,16,32,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,27,1,140,29,11,16,23,0,101,0,51,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,12,32,33,34,42,43,44,45,46,27,52,53,1,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,53,1,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,29,30,12,16,32,35,36,11,37,38,39,40,41,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,140,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,29,30,12,16,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,19,48,22,49,27,27,52,53,53,1,3,3,29,29,30,30,12,12,16,16,32,32,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,43,43,44,44,45,45,46,46,47,47,19,19,48,48,22,22,49,49,27,27,52,52,53,53,1,1,12,35,141,35,23,47,38,38,0,38,38,29,16,38,0,3,3,29,30,17,17,12,12,16,32,33,34,35,36,36,11,37,38,68,68,39,39,40,69,69,41,42,43,44,45,46,47,19,48,22,49,49,27,27,50,51,52,53,1,1,3,3,29,5,101,30,100,17,17,17,12,16,32,32,33,34,35,36,11,37,38,68,39,40,69,69,69,69,69,41,42,42,42,42,42,42,42,42,42,42,42,42,42,43,44,45,46,47,19,48,22,49,27,27,50,51,52,52,53,53,1,1,33,50,17,17,17,17,17,17,17,17,17,16,17,17,3,30,32,33,27,53,1,38,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,37,27,1,27,53,1,27,1,27,1,3,37,27,1,141,27,53,1,27,53,1,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,11,140,51,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,32,12,0,32,0,3,0,50,34,32,22,3,101,45,101,100,29,16,100,5,40,0,0,3,29,5,30,32,33,34,11,40,41,44,46,19,48,50,51,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,27,16,23,12,35,141,49,37,27,27,1,29,11,3,53,0,27,29,0,48,53,0,0,0,0,140,47,46,12,12,23,40,34,0,0,38,38,3,29,30,12,16,32,35,36,11,37,38,39,40,41,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,30,22,52,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,50,34,17,69,140,0,0,46,27,1,1,44,43,0,19,48,41,52,30,11,37,3,29,30,12,16,32,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,3,17,12,36,37,68,39,69,49,27,1,40,50,0,53,33,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,1,50,50,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,11,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,0,48,41,43,52,19,50,3,29,5,101,30,100,17,12,16,32,33,34,35,36,11,37,38,68,39,40,69,41,42,43,44,45,46,47,19,48,22,49,27,50,51,52,53,1,0,142,143,144,142,143,145,145,144,146,147,148,148,149,149,0,0,114,114,114,23,114,23,114,114,114,114,23,114,114,114,114,114,114,114,23,23,114,114,114,114,114,0,119,119,119,0,119,119,119,119,119,119,0,0,119,119,119,119,119,0,119,0,0,0,119,119,119,0,119,0,0,0,0,0,121,121,123,124,121,123,124,0,0,0,121,123,124,121,123,124,121,123,124,123,124,121,123,124,0,0,121,121,123,124,0,121,123,124,121,121,123,124,121,123,124,121,123,124,121,121,121,123,124,0,121,123,0,123,121,121,123,124,121,121,123,124,0,121,121,0,0,123,124,121,123,124,121,123,124,121,123,124,121,0,124,121,123,124,0,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,0,17,49,0,37,42,37,42,37,42,0,49,68,68,0,0,68,0,0,68,0,0,0,22,49,0,0,0,0,0,0,0,17,139,140,0,38,47,0,0,37,42,37,42,38,49,0,0,0,0,0,0,0,37,42,37,42,0,0,0,17,69,69,22,69,69,69,139,49,0,0,36,36,0,0,37,42,69,38,47,17,37,42,37,42,37,42,37,42,39,0,0,22,0,39,37,42,0,0,0,37,42,37,42,37,42,37,42,39,0,0,29,101,41,141,30,29,0,44,16,29,52,52,50,140,140,29,11,16,101,0,51,140,35,141,35,29,16,3,30,141,11,140,51,0,0,3,50,34,101,45,101,100,29,16,100,40,0,16,35,141,29,11,3,29,48,0,140,46,12,12,40,34,3,30,52,50,140,44,43,19,48,41,52,30,11,50,11,48,41,43,52,19,50,142,143,144,142,143,145,145,144,146,147,148,148,149,149,0,0,23,23,23,23,23,0,0,23,23,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,135,136,135,136,134,135,135,136,136,0,0,135,136,136,135,136,135,136,135,136,136,135,136,136,136,136,135,136,135,136,136,135,136,134,136,135,136,136,136,135,135,136,136,136,135,136,135,136,136,135,136,135,136,0,0,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138,137,138],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,2],1],[[1,1]],[[1,2]],[[3,4]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,[7,[6]],[7,[[10,[8,9]]]],11,[14,[2,12,13]],15],[[18,[16,17]]]],0,0,0,0,0,[[[21,[[20,[19]],9]]],22],0,0,[[23,[0,[24,25]]],26],[[27,27],[[28,[27]]]],[[1,1],[[28,[1]]]],0,[[27,27],[[28,[27]]]],0,[[4,4],18],[[5,4,4],[[18,[17]]]],[3,3],[29,29],[30,30],[12,12],[16,16],[[[32,[31]]],[[32,[31]]]],[[[33,[31]]],[[33,[31]]]],[34,34],[35,35],[36,36],[11,11],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[19,19],[48,48],[22,22],[49,49],[27,27],[50,50],[51,51],[52,52],[53,53],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,27],54],[[1,1],54],[[4,4,29],18],0,0,0,0,[23,50],0,[[],55],0,[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[[],3],[[],12],[[],32],[[],33],[[],34],[[],42],[[],43],[[],44],[[],45],[[],46],[[],27],[[],52],[[],53],[[],1],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[53,[[59,[49]]]],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[60,[[18,[3]]]],[60,[[18,[29]]]],[60,[[18,[30]]]],[60,[[18,[12]]]],[60,[[18,[16]]]],[60,[[18,[[32,[61]]]]]],[60,[[18,[35]]]],[60,[[18,[36]]]],[60,[[18,[11]]]],[60,[[18,[37]]]],[60,[[18,[38]]]],[60,[[18,[39]]]],[60,[[18,[40]]]],[60,[[18,[41]]]],[60,[[18,[43]]]],[60,[[18,[44]]]],[60,[[18,[45]]]],[60,[[18,[46]]]],[60,[[18,[47]]]],[60,[[18,[19]]]],[60,[[18,[48]]]],[60,[[18,[22]]]],[60,[[18,[49]]]],[60,[[18,[27]]]],[60,[[18,[50]]]],[60,[[18,[51]]]],[60,[[18,[52]]]],[60,[[18,[53]]]],[60,[[18,[1]]]],[[62,58,23],26],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[58],[[3,3],26],[[29,29],26],[[30,30],26],[[12,12],26],[[16,16],26],[[[32,[[63,[[63,[[63,[63]]]]]]]],[32,[[63,[[63,[[63,[63]]]]]]]]],26],[[34,34],26],[[35,35],26],[[36,36],26],[[37,37],26],[[38,38],26],[[39,39],26],[[40,40],26],[[41,41],26],[[42,42],26],[[43,43],26],[[44,44],26],[[45,45],26],[[46,46],26],[[47,47],26],[[19,19],26],[[48,48],26],[[22,22],26],[[49,49],26],[[27,58],26],[[27,27],26],[[52,52],26],[[53,53],26],[[53,[10,[49,9]]],26],[[1,1],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[64,65],12],0,0,0,0,[[[21,[[20,[19]],9]]],47],[[[21,[[20,[41]],9]]],38],[39,38],0,[[[21,[[20,[41]],9]]],38],[[[21,[[20,[65]],9]]],38],0,0,[[[21,[[20,[41]],9]]],38],0,[[3,56],[[18,[57]]]],[[3,56],[[18,[57]]]],[[29,56],[[18,[57]]]],[[30,56],[[18,[57]]]],[[[17,[66]],56],[[18,[57]]]],[[[17,[67]],56],[[18,[57]]]],[[12,56],[[18,[57]]]],[[12,56],[[18,[57]]]],[[16,56],[[18,[57]]]],[[[32,[67]],56],[[18,[57]]]],[[[33,[67]],56],[[18,[57]]]],[[34,56],[[18,[57]]]],[[35,56],[[18,[57]]]],[[36,56],[[18,[57]]]],[[36,56],[[18,[57]]]],[[11,56],[[18,[57]]]],[[37,56],[[18,[57]]]],[[38,56],[[18,[57]]]],[[68,56],[[18,[57]]]],[[68,56],[[18,[57]]]],[[39,56],[[18,[57]]]],[[39,56],[[18,[57]]]],[[40,56],[[18,[57]]]],[[69,56],[[18,[57]]]],[[69,56],[[18,[57]]]],[[41,56],[[18,[57]]]],[[42,56],[[18,[57]]]],[[43,56],[[18,[57]]]],[[44,56],[[18,[57]]]],[[45,56],[[18,[57]]]],[[46,56],[[18,[57]]]],[[47,56],[[18,[57]]]],[[19,56],[[18,[57]]]],[[48,56],[[18,[57]]]],[[22,56],[[18,[57]]]],[[49,56],[[18,[57]]]],[[49,56],[[18,[57]]]],[[27,56],[[18,[57]]]],[[27,56],[[18,[57]]]],[[50,56],[[18,[57]]]],[[51,56],[[18,[57]]]],[[52,56],[[18,[57]]]],[[53,56],[[18,[57]]]],[[1,56],[[18,[57]]]],[[1,56],[[18,[57]]]],[70,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[71],[[]],[[]],[33,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,69],[73,69],[[]],[74,69],[75,69],[[]],[76,42],[2,42],[6,42],[77,42],[78,42],[79,42],[[]],[80,42],[8,42],[81,42],[64,42],[82,42],[[[10,[8,9]]],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,27],[[]],[[]],[[]],[[]],[83,52],[[]],[[[10,[49,9]]],53],[[]],[2,1],[[32,32],33],[[53,52,[86,[84,85]],2,55],50],[87],[87],[87],[87],[87],[88],[89],[90],[91],[[23,58,62],[[18,[16,35]]]],[87],[87],0,0,[[32,20],[[28,[[21,[9]]]]]],[[33,20],[[28,[[21,[9]]]]]],[92,28],[[53,1],[[28,[49]]]],[92,28],[38,[[28,[[21,[[20,[41]],9]]]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[[0,[95,96]],97],81],[[[0,[95,96]],97],81],[[[0,[95,96]],97],81],[[[0,[95,96]],97],81],[92,28],[[53,1],[[28,[49]]]],[92,28],[92],[92],[92],[92],[[3,98]],[[37,98]],[[27,98]],[[1,98]],0,[92],[[53,1]],[92],[92],[[53,1]],[92],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32],[12,99],[[[14,[2,12,13]]],[[14,[2,99,13]]]],[32,26],[23,26],0,0,0,0,[32,58],[[],22],[[[7,[6]]],3],0,0,0,0,0,0,0,[5,100],0,0,0,[[[7,[6]],[7,[6]],[7,[6]],[7,[6]]],3],[[4,[59,[8]],[59,[8]],[59,[8]],[59,[8]],[59,[8]],62,58],29],[101,[[18,[5,17]]]],[[[7,[6]],[7,[6]],[10,[65,9]],[10,[[10,[3,9]],9]]],30],[[],32],[[],33],[[2,2],34],[[[102,[4]],[102,[4]],81,2,[102,[4]]],11],[[64,[21,[6,9]]],40],[[[21,[[20,[65]],9]],[21,[4,9]],[21,[[20,[3]],9]]],41],[[1,58],44],[27,46],[[[21,[[20,[3]],9]],[10,[[21,[[20,[48]],9]],9]]],19],[[[21,[[20,[65]],9]],[21,[[20,[3]],9]],22],48],[55,50],[55,51],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[27,27],0,0,[65,12],0,0,[[58,58],49],[105,[[18,[37,106]]]],[[27,58],[[28,[54]]]],[[27,27],[[28,[54]]]],[[1,1],[[28,[54]]]],0,0,0,[53,[[28,[49]]]],0,[27,27],0,[[23,4]],0,[[53,49]],[[[7,[53]],83],[[10,[8]]]],[[[7,[53]],83],[[10,[8]]]],0,0,[[4,4],[[18,[[10,[8,9]]]]]],[[[21,[6,9]]],47],0,0,0,0,0,0,0,0,[[[21,[6,9]]],38],[[[21,[6,9]],2],38],[[3,107],18],[[29,107],18],[[30,107],18],[[12,107],18],[[16,107],18],[[[32,[108]],107],18],[[35,107],18],[[36,107],18],[[11,107],18],[[37,107],18],[[38,107],18],[[39,107],18],[[40,107],18],[[41,107],18],[[43,107],18],[[44,107],18],[[45,107],18],[[46,107],18],[[47,107],18],[[19,107],18],[[48,107],18],[[22,107],18],[[49,107],18],[[27,107],18],[[50,107],18],[[51,107],18],[[52,107],18],[[53,107],18],[[1,107],18],0,0,[[[21,[[20,[41]],9]]],22],0,[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],0,[34,[[28,[2]]]],[[[17,[109]]],[[28,[109]]]],[69,[[28,[109]]]],[[[59,[8]],4,4],18],0,0,[[],46],[[],27],[[1,2],1],[[1,1],1],0,0,0,0,0,0,0,0,0,[[37,110],[[18,[94]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[37,6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[40,65],0,[23,53],[53,2],[[[33,[108]],[7,[[21,[108,9]]]]],[[18,[[21,[[20,[108]],9]],111]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[58,[[18,[1]]]],[[],18],[[[59,[8]]],[[18,[50,112]]]],[[[59,[8]]],[[18,[51,112]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[114,[7,[6]],[7,[[10,[8,9]]]],[7,[[10,[8,9]]]],[7,[6]],81,2,[7,[6]],[14,[2,12,13]],15,6],[[18,[23,115]]]],0,[[114,[7,[6]],[7,[[10,[8,9]]]],[7,[[10,[8,9]]]],[7,[6]],81,2,[7,[6]],[14,[2,12,13]],6,8,8,[10,[8,9]],6],[[18,[23,115]]]],0,[56,[[18,[57]]]],[58],[58],[58],0,[[]],[[],[[18,[93,94]]]],[[],58],[[]],[114,100],[[116,[28,[81]],64],[[18,[114,115]]]],[93,[[18,[[104,[103]],94]]]],0,0,[[[104,[103]]],[[18,[94]]]],[[],18],[[],18],[[],113],[[]],0,0,0,0,0,[[]],[[]],[56,[[18,[57]]]],[58],[58],[58],[[],117],[[[7,[6]]],117],[[]],[[],[[18,[93,94]]]],[[],58],[[]],[93,[[18,[[104,[103]],94]]]],[[[7,[6]]],117],[[[104,[103]]],[[18,[94]]]],[118,117],[[[14,[6,118]],119],117],[120],[[],18],[[],18],[[],113],[[],117],[[]],0,0,0,[[64,4],118],[[[7,[27]]],49],[[121,122],121],[[]],[[]],[[]],[[]],[[]],[[]],[118,49],[[[7,[6]]],49],[[118,83],49],[56,[[18,[57]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[58],[58],[58],[58],[58],[58],[60,[[18,[123]]]],[60,[[18,[124]]]],[58],[58],[58],[49,[[21,[[20,[19]]]]]],[49,[[21,[[20,[41]]]]]],[121,49],[[121,83],49],[[123,56],125],[[124,56],125],[126,49],[[]],[[]],[[]],[[121,[7,[6]]],121],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[121,[7,[6]]],121],[[[7,[118]]],121],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[[2,2],49],[[121,[7,[6]]],121],0,[[[7,[6]]],49],0,[121,49],[[121,83],49],[[123,107],18],[[124,107],18],[[121,[7,[6]]],121],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[[7,[65]],83],[[21,[[20,[41]]]]]],[[121,2],49],[[121,2,83],49],[[[7,[1]],2],44],[[[7,[1]],44,44],43],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],113],[[],113],[[],113],[121,49],[[[7,[65]],3,[10,[65]],83],[[21,[[20,[41]]]]]],0,[[]],[[]],[[]],[4],0,[[]],[[]],[[127,[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],[7,[6]],81,2,[28,[6]],128,15,6],[[18,[23,[129,[109]]]]]],[56,[[18,[57]]]],[58],[58],[58],[[]],[[],[[18,[93,94]]]],[[],58],[[]],[[[7,[6]]],127],[93,[[18,[[104,[103]],94]]]],[[[104,[103]]],[[18,[94]]]],[[],18],[[],18],[[],113],[[]],0,[[]],[[]],[[[130,[[0,[31,67]]]]],[[130,[[0,[31,67]]]]]],[[]],[56,[[18,[57]]]],[[],[[130,[[0,[131,67]]]]]],[58],[[[130,[67]]]],[58],[60,[[18,[[130,[[0,[67,61]]]]]]]],[58],[[[130,[[0,[[63,[[0,[[63,[[0,[[63,[[0,[63,67]]]],67]]]],67]]]],67]]]],[130,[[0,[[63,[[0,[[63,[[0,[[63,[[0,[63,67]]]],67]]]],67]]]],67]]]]],26],[[],26],[[],26],[[[130,[67]],56],[[18,[57]]]],[[]],[[],[[18,[93,94]]]],[[[0,[95,96]],97],81],[[[130,[[0,[95,67]]]],98]],[[],58],[[]],[[[130,[67]]],[[10,[67,9]]]],[[[10,[67,9]]],[[18,[[130,[67]],132]]]],[93,[[18,[[104,[103]],94]]]],[[[130,[[0,[67,108]]]],107],18],[[[104,[103]]],[[18,[94]]]],[[]],[[],18],[[],18],[[],113],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,4],18],[[4,4,29],18],0,0,0,0,[[],55],0,[[62,58,23],26],0,0,0,0,0,0,0,0,0,[[],18],0,[[[14,[2,12,13]]],[[14,[2,99,13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,4],[[18,[[10,[8,9]]]]]],0,0,0,0,0,0,0,0,0,[[[59,[8]],4,4],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[23,23],[[]],0,[56,[[18,[57]]]],[58],[58],[60,[[18,[23]]]],[58],[[23,23],26],[[],26],[[],26],0,[[23,56],[[18,[57]]]],[[]],[133,[[18,[23,68]]]],[[],[[18,[93,94]]]],[[],58],[[]],[93,[[18,[[104,[103]],94]]]],0,0,[[23,107],18],[[[104,[103]]],[[18,[94]]]],[[]],[[],18],[[],18],[[],113],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],[7,[6]],81,2,[28,[6]],128,15,6],[[18,[23,[129,[109]]]]]],[[[135,[134]],[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],136],[[18,[23,6]]]],[[[135,[134]],[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],[7,[6]],81,2,[28,[6]],128,[7,[6]]],[[18,[23,[129,[109]]]]]],[136,136],[[]],[[117,[7,[6]]],135],[[117,[7,[6]]],[[135,[134]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[[],136],[58],[58],[58],[58],[58],[58],[[136,56],125],[[]],[[]],[[[7,[6]]],136],[81,136],[2,136],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],58],[[],58],0,[[]],[[]],[[[7,[6]]]],[[[7,[6]],81,2,[7,[6]]],136],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],0,0,0,[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],0,[[]],[[],18],[[],18],[[],18],[[],18],0,[[],113],[[],113],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[137,[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],[7,[6]],81,2,[28,[6]],128,15,6],[[18,[23,[129,[109]]]]]],[[138,[7,[6]],[7,[[10,[8]]]],[7,[[10,[8]]]],[7,[6]],81,2,[28,[6]],128,15,6],[[18,[23,[129,[109]]]]]],[56,[[18,[57]]]],[56,[[18,[57]]]],[58],[58],[58],[58],[58],[58],[[]],[[]],[[],[[18,[93,94]]]],[[],[[18,[93,94]]]],[[],58],[[],58],[[]],[[]],[[[7,[6]]],137],[[[7,[6]]],138],[93,[[18,[[104,[103]],94]]]],[93,[[18,[[104,[103]],94]]]],[[[104,[103]]],[[18,[94]]]],[[[104,[103]]],[[18,[94]]]],[[],18],[[],18],[[],18],[[],18],[[],113],[[],113],[[]],[[]]],"c":[],"p":[[3,"TracePos",0],[15,"u32"],[3,"SecurityTetraplet",0],[15,"str"],[3,"AVM",0],[3,"String",1863],[8,"Into",1864],[15,"u8"],[3,"Global",1865],[3,"Vec",1866],[3,"ParticleParameters",0],[3,"CallServiceResult",0],[3,"RandomState",1867],[3,"HashMap",1867],[4,"KeyPair",1868],[3,"AVMOutcome",0],[4,"AVMError",0],[4,"Result",1869],[3,"CanonResultCidAggregate",0],[3,"CID",1870],[3,"Rc",1871],[4,"Provenance",0],[3,"RawAVMOutcome",1733],[8,"ToErrorCode",1872],[8,"ToString",1863],[15,"bool"],[3,"GenerationIdx",0],[4,"Option",1873],[3,"AnomalyData",0],[3,"CallRequestParams",0],[8,"Clone",1874],[3,"CidStore",0],[3,"CidTracker",0],[3,"ParResult",0],[3,"ErrorAVMOutcome",0],[4,"Sender",0],[4,"IType",0],[4,"CallResult",0],[4,"ValueRef",0],[3,"CallServiceFailed",0],[3,"ServiceResultCidAggregate",0],[4,"IValue",0],[3,"FoldSubTraceLore",0],[3,"SubTraceDesc",0],[3,"FoldResult",0],[3,"ApResult",0],[4,"CanonResult",0],[3,"CanonCidAggregate",0],[4,"ExecutedState",0],[3,"InterpreterData",0],[3,"Versions",0],[3,"CidInfo",0],[3,"ExecutionTrace",0],[4,"Ordering",1875],[3,"Version",1876],[3,"Formatter",1877],[3,"Error",1877],[15,"usize"],[15,"slice"],[8,"Deserializer",1878],[8,"Deserialize",1878],[3,"Duration",1879],[8,"PartialEq",1875],[15,"i32"],[4,"Value",1880],[8,"Display",1877],[8,"Debug",1877],[4,"CallSeDeErrors",0],[4,"HostImportError",0],[3,"ResolvedTriplet",1881],[15,"never"],[4,"LiError",1882],[4,"LoError",1883],[3,"FromUtf8Error",1863],[4,"RecordResolvableError",1884],[15,"f32"],[15,"f64"],[15,"i8"],[15,"i64"],[15,"i16"],[15,"u64"],[15,"u16"],[3,"ExecutionCidState",1885],[3,"PublicKey",1886],[3,"Signature",1886],[3,"SignatureStore",1886],[3,"OwnedFd",1887],[8,"IntoFilelike",1888],[8,"IntoFilelike",1888],[8,"IntoSocketlike",1888],[8,"IntoSocketlike",1888],[3,"TiSlice",1889],[3,"FdFlags",1890],[3,"Error",1891],[8,"Hash",1892],[8,"Sized",1893],[8,"BuildHasher",1892],[8,"Hasher",1892],[3,"CallServiceResult",1894],[3,"AVMMemoryStats",0],[3,"AVMConfig",0],[4,"Cow",1895],[8,"AsFilelike",1888],[3,"SetFdFlags",1890],[3,"Parser",1896],[3,"Error",1897],[8,"Serializer",1898],[8,"Serialize",1898],[8,"Error",1899],[8,"Write",1900],[3,"CidCalculationError",1870],[3,"Error",1901],[3,"TypeId",1902],[3,"AVMRunner",1308],[4,"RunnerError",1903],[3,"PathBuf",1904],[6,"CallServiceClosure",0],[6,"JValue",0],[4,"VariableOptionSource",1335],[8,"Fn",1905],[3,"ExecutedCallBuilder",1363],[8,"IntoIterator",1906],[3,"ValueAggregateAlike",1363],[3,"CanonResultAlike",1363],[6,"Result",1877],[6,"FoldLore",0],[3,"NativeAirRunner",1453],[6,"CallResults",0],[3,"Box",1907],[3,"NEVec",1472],[8,"Default",1908],[3,"EmptyVec",1909],[3,"InterpreterOutcome",1910],[8,"AirRunner",1765],[3,"TestRunner",1765],[3,"TestRunParameters",1765],[3,"WasmAirRunner",1825],[3,"ReleaseWasmAirRunner",1825],[6,"AVMResult",0],[8,"DataStore",0],[6,"HostImportDescriptor",0],[13,"CallParamsArgsDeFailed",1705],[13,"CallParamsTetrapletsDeFailed",1705],[13,"CallResultsSeFailed",1705],[13,"CallRequestsDeError",1705],[13,"ServiceResult",1713],[13,"Canon",1713],[13,"PeerIdWithCallId",1715],[13,"Stream",1717]]},\
"air_trace_handler":{"doc":"","t":"CNNNNEEENNNCNNNNNNNNNNNENEDEGNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMENENENNNNENNNENNNNNNNNNEEEEEDDNNDDNNENNNNDDNNENMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLMMMLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMMM","n":["DataType","Err","FoldFSMNotFound","FoldLenUnderflow","FoldPosOverflow","GenerationCompactificationError","IntConversionError","KeeperError","KeeperError","KeeperError","Left","MergeError","MergeError","NoElementAtPosition","NoStreamState","Ok","ParLenOverflow","ParLenUnderflow","ParPosOverflow","ParQueueIsEmpty","Right","SetSubtraceLenAndPosFailed","SetSubtraceLenFailed","StateFSMError","StateFSMError","SubgraphType","TraceHandler","TraceHandlerError","TraceHandlerResult","TracePosPointsToInvalidState","TracePosPointsToNowhere","TryIntoTracePosError","as_result_trace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_trace","into","into","into","into","into","into","into","into_result_trace","meet_ap_end","meet_ap_start","meet_back_iterator","meet_call_end","meet_call_start","meet_canon_end","meet_canon_start","meet_fold_end","meet_fold_start","meet_generation_end","meet_iteration_end","meet_iteration_start","meet_par_start","meet_par_subgraph_end","merger","points_to_invalid_state","points_to_nowhere","source","source","subgraph_sizes","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trace_pos","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_generation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","position","state","position","requested_pos","requested_subtrace_len","requested_subtrace_len","state","trace_len","trace_len","trace_len","trace_position","ApResultError","Both","CallResultError","CanonResult","CanonResultError","Current","Current","Current","CurrentData","DataType","DifferentExecutedStateExpected","Empty","FoldIncorrectSubtracesCount","FoldResultError","IncompatibleCallResults","IncompatibleExecutedStates","IncompatibleState","IncorrectApResult","IncorrectCallResult","IncorrectCanonResult","IncorrectFoldResult","InvalidDstGenerations","KeeperError","MergeCtxType","MergeError","MergerApResult","MergerCallResult","MergerCanonResult","MergerFoldResult","MergerParResult","Met","Met","MetApResult","MetCallResult","NotMet","NotMet","PreparationScheme","Previous","Previous","Previous","PreviousData","ResolvedFold","ResolvedSubTraceDescs","SeveralRecordsWithSamePos","SubtraceLenOverflow","ValueSource","ValuesNotEqual","after_subtrace","before_subtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_fold_lore","current_par","default","default","default","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_states_count","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generation","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lore","new","new","new","prev_fold_lore","prev_par","result","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trace_pos","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_source","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","current_call","current_value","prev_call","prev_value","current_canon_result","prev_canon_result","count","fold_result"],"q":[[0,"air_trace_handler"],[144,"air_trace_handler::GenerationCompactificationError"],[146,"air_trace_handler::KeeperError"],[155,"air_trace_handler::merger"],[447,"air_trace_handler::merger::CallResultError"],[451,"air_trace_handler::merger::CanonResultError"],[453,"air_trace_handler::merger::FoldResultError"],[455,"air_interpreter_data::trace"],[456,"core::fmt"],[457,"core::fmt"],[458,"air_interpreter_data::executed_state"],[459,"air_interpreter_data::executed_state"],[460,"core::option"],[461,"alloc::string"],[462,"core::result"],[463,"core::any"],[464,"air_interpreter_data::generation_idx"],[465,"std::collections::hash::map"],[466,"air_interpreter_data::executed_state"]],"d":["","Contains the error value","Errors occurred while trying to access or pop elements …","Errors occurred when {1} - 1{0}.fold_states_count …","Errors occurred when {0}.fold_states_count + {1} overflows.","","","Errors arose out while accessing various interpreter data.","","Errors bubbled from DataKeeper.","","","","Errors occurred when Fold FSM tries to obtain stream …","Errors occurred when Fold FSM tries to obtain stream …","Contains the success value","Errors occurred when ParResult.0 + ParResult.1 overflows.","Errors occurred when ParResult.0 + ParResult.1 value is …","Errors occurred when slider.position() + ParResult.0 + …","Error occurred while trying to access or pop elements from …","","Errors occurred when requested_subtrace_len != 0 &amp;&amp; …","Errors occurred when trace_len - trace_position &lt; …","Errors arose out of merging previous data with a new.","","","","Errors arose out of merging previous data with a new.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Should be called when a call instruction was executed …","Should be called at the beginning of a call execution.","","","","","","","","","","","","","","","","","","","","","","","Returns size of elements inside result trace and intended …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","There was a state in at least one of the contexts. If …","","","","","","","Merger was expected to see other state that was obtained …","There is no corresponding state in a trace for this call.","Errors occurred when one of the fold subtrace lore doesn’…","","Errors occurred when previous and current call results are …","Errors occurred when previous and current executed states …","","","","","","Error occurred when Ap results contains not 1 generation …","","","Errors arose out of merging previous data with a new.","","","","","","There was a state in at least one of the contexts. If …","There was a state in at least one of the contexts. If …","","","There is no corresponding state in a trace for this call.","There is no corresponding state in a trace for this call.","","","","","","","","There are several lores with the same value_pos.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,15,11,11,11,0,0,0,8,11,3,0,8,4,4,15,11,11,11,11,3,4,4,0,8,0,0,0,0,9,9,10,1,4,8,9,10,1,11,3,4,8,9,10,1,11,3,3,3,1,4,3,4,3,4,4,8,8,9,9,10,10,1,11,11,3,3,4,8,8,8,8,9,10,1,11,11,3,1,4,8,9,10,1,11,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,9,9,8,11,1,3,4,8,9,10,11,3,1,4,8,9,10,1,11,3,4,8,9,10,1,11,3,4,8,9,10,1,11,3,1,4,8,9,10,1,11,3,45,45,46,47,48,47,49,48,47,46,48,0,36,0,20,0,31,36,37,38,0,12,20,42,0,40,12,41,12,12,12,12,39,12,0,0,0,0,0,0,0,14,18,0,0,14,18,0,31,36,37,38,0,0,42,42,0,40,33,33,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,14,29,18,30,20,31,32,33,34,35,36,37,38,14,29,18,30,20,31,32,33,34,35,36,37,38,34,35,32,34,35,32,33,32,33,14,29,18,30,20,12,12,39,39,40,40,41,41,42,42,31,31,32,33,34,35,36,37,37,38,32,14,29,18,30,20,12,12,12,12,12,12,39,40,41,42,31,32,33,34,35,36,37,38,38,29,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,32,30,32,33,34,35,30,12,30,14,29,18,30,20,31,32,33,34,35,36,37,38,12,39,40,41,42,31,37,30,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,29,14,29,18,30,20,12,39,40,41,42,31,32,33,34,35,36,37,38,50,51,50,51,52,52,53,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],[[],1],[[4,4],5],[[3,3],5],[[],5],[[],5],[[4,6],7],[[4,6],7],[[8,6],7],[[8,6],7],[[9,6],7],[[9,6],7],[[10,6],7],[[10,6],7],[[1,6],7],[[11,6],7],[[11,6],7],[[3,6],7],[[3,6],7],[[]],[11,8],[4,8],[[]],[12,8],[[]],[[]],[[]],[[]],[4,11],[[]],[[2,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[1,13]],[1,[[15,[14]]]],[[1,16],15],[[1,17]],[1,[[15,[18]]]],[[1,19]],[1,[[15,[20]]]],[[1,16],15],[[1,16],15],[[1,16],15],[[1,16],15],[[1,16,21],15],[1,15],[[1,3],15],0,[[21,22],9],[21,9],[8,[[24,[23]]]],[11,[[24,[23]]]],[1],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[1,[[26,[21,10]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[1,21,28],[[26,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[29,29],[18,18],[30,30],[20,20],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],32],[[],34],[[],35],[[32,32],5],[[33,33],5],[[],5],[[],5],[[14,6],7],[[29,6],7],[[18,6],7],[[30,6],7],[[20,6],7],[[12,6],7],[[12,6],7],[[39,6],7],[[39,6],7],[[40,6],7],[[40,6],7],[[41,6],7],[[41,6],7],[[42,6],7],[[42,6],7],[[31,6],7],[[31,6],7],[[32,6],7],[[33,6],7],[[34,6],7],[[35,6],7],[[36,6],7],[[37,6],7],[[37,6],7],[[38,6],7],0,[[]],[[]],[[]],[[]],[[]],[42,12],[4,12],[[]],[39,12],[40,12],[41,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,38],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[17,21,38],30],[[[43,[21,33]],16],32],[[44,44],33],0,0,0,[12,[[24,[23]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0],"c":[],"p":[[3,"TraceHandler",0],[3,"ExecutionTrace",455],[4,"SubgraphType",0],[4,"KeeperError",0],[15,"bool"],[3,"Formatter",456],[6,"Result",456],[4,"TraceHandlerError",0],[4,"GenerationCompactificationError",0],[4,"IntConversionError",0],[4,"StateFSMError",0],[4,"MergeError",155],[3,"ApResult",457],[4,"MergerApResult",155],[6,"TraceHandlerResult",0],[15,"u32"],[4,"CallResult",457],[4,"MergerCallResult",155],[4,"CanonResult",457],[4,"MergerCanonResult",155],[3,"TracePos",458],[4,"ExecutedState",457],[8,"Error",459],[4,"Option",460],[3,"String",461],[4,"Result",462],[3,"TypeId",463],[3,"GenerationIdx",464],[3,"MetApResult",155],[3,"MetCallResult",155],[4,"DataType",155],[3,"ResolvedFold",155],[3,"ResolvedSubTraceDescs",155],[3,"MergerFoldResult",155],[3,"MergerParResult",155],[4,"PreparationScheme",155],[4,"MergeCtxType",155],[4,"ValueSource",155],[4,"ApResultError",155],[4,"CallResultError",155],[4,"CanonResultError",155],[4,"FoldResultError",155],[3,"HashMap",465],[3,"SubTraceDesc",457],[13,"TracePosPointsToInvalidState",144],[13,"NoElementAtPosition",146],[13,"SetSubtraceLenAndPosFailed",146],[13,"SetSubtraceLenFailed",146],[13,"NoStreamState",146],[13,"IncompatibleCallResults",447],[13,"ValuesNotEqual",447],[13,"IncompatibleState",451],[13,"SubtraceLenOverflow",453]]},\
"air_utils":{"doc":"","t":"OO","n":["auto_checked_add","measure"],"q":[[0,"air_utils"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"avm_data_store":{"doc":"","t":"DIQMMLLMKLLKMLKLLMLLKLMLMMKLKLLLL","n":["AnomalyData","DataStore","Error","air_script","avm_outcome","borrow","borrow_mut","call_results","cleanup_data","clone","clone_into","collect_anomaly_data","current_data","deserialize","detect_anomaly","eq","equivalent","execution_time","fmt","from","initialize","into","memory_delta","new","particle","prev_data","read_data","serialize","store_data","to_owned","try_from","try_into","type_id"],"q":[[0,"avm_data_store"],[33,"core::result"],[34,"serde::de"],[35,"core::time"],[36,"avm_interface::raw_outcome"],[37,"core::fmt"],[38,"core::fmt"],[39,"serde::ser"],[40,"core::any"]],"d":["","This trait is used for","","","","","","","Cleanup data that become obsolete.","","","","","","Returns true if an anomaly happened and it’s necessary …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,16,3,3,3,3,3,16,3,3,16,3,3,16,3,3,3,3,3,16,3,3,3,3,3,16,3,16,3,3,3,3],"f":[0,0,0,0,0,[[]],[[]],0,[[1,1],2],[3,3],[[]],[[1,1,3],2],0,[4,[[2,[3]]]],[[5,6,7],8],[[3,3],8],[[],8],0,[[3,9],10],[[]],[[],2],[[]],0,[[1,[12,[11]],[12,[11]],[12,[11]],[12,[11]],[12,[11]],5,6],3],0,0,[[1,1],[[2,[[13,[11]]]]]],[[3,14],2],[[[12,[11]],1,1],2],[[]],[[],2],[[],2],[[],15]],"c":[],"p":[[15,"str"],[4,"Result",33],[3,"AnomalyData",0],[8,"Deserializer",34],[3,"Duration",35],[15,"usize"],[3,"RawAVMOutcome",36],[15,"bool"],[3,"Formatter",37],[6,"Result",37],[15,"u8"],[15,"slice"],[3,"Vec",38],[8,"Serializer",39],[3,"TypeId",40],[8,"DataStore",0]]},\
"avm_interface":{"doc":"","t":"DRNNDGNGNEDDDMLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLLLFMLLMLMMAMMLLLLLMMMLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMMMMDLLMLLMLLLMLLLLMMLLLLL","n":["AVMOutcome","CALL_SERVICE_SUCCESS","CallParamsArgsDeFailed","CallParamsTetrapletsDeFailed","CallRequestParams","CallRequests","CallRequestsDeError","CallResults","CallResultsSeFailed","CallSeDeErrors","CallServiceResult","ErrorAVMOutcome","ParticleParameters","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_requests","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","current_peer_id","data","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","err","error_code","error_message","execution_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw_outcome","function_name","init_peer_id","into","into","into","into","into","into","into_raw","into_raw_result","memory_delta","new","new","next_peer_pks","ok","outcome","particle_id","raw_outcome","result","ret_code","serialize","serialize","serialize","serialize","serialize","service_id","tetraplets","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","call_params","call_params","call_results","de_error","de_error","error","raw_call_request","se_error","RawAVMOutcome","borrow","borrow_mut","call_requests","clone","clone_into","data","deserialize","eq","equivalent","error_message","fmt","from","from_interpreter_outcome","into","next_peer_pks","ret_code","serialize","to_owned","try_from","try_into","type_id"],"q":[[0,"avm_interface"],[126,"avm_interface::CallSeDeErrors"],[134,"avm_interface::raw_outcome"],[156,"serde::de"],[157,"core::result"],[158,"serde_json::value"],[159,"core::fmt"],[160,"core::fmt"],[161,"air_interpreter_interface::call_service_result"],[162,"air_interpreter_interface::call_service_result"],[163,"core::convert"],[164,"alloc::vec"],[165,"marine_call_parameters"],[166,"alloc::borrow"],[167,"serde::ser"],[168,"core::any"],[169,"air_interpreter_interface::interpreter_outcome"]],"d":["","","Errors encountered while trying to deserialize arguments …","Errors encountered while trying to deserialize tetraplets …","Contains arguments of a call instruction and all other …","","This error is encountered when deserialization pof call …","","Errors encountered while trying to serialize call results.","","Represents an executed host function result.","","Represents parameters obtained from a particle.","Arguments that should be passed to the function.","","","","","","","","","","","","","Collected parameters of all met call instructions that …","","","","","","","","","","","","Contains script data that should be preserved in an …","","","","","","","","","","","","","","","","","","Time of a particle execution (it counts only execution …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Name of a function from service identified by service_id …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Memory in bytes AVM linear heap was extended during …","","","Public keys of peers that should receive data.","","","","","Resulted JValue returned by a service string.","A error code service or builtin returned, where …","","","","","","Id of a service that should be called.","Tetraplets that should be passed to the service.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,13,13,0,0,13,0,13,0,0,0,0,1,1,2,3,4,5,13,1,2,3,4,5,13,3,1,2,3,4,5,1,2,3,4,5,5,3,2,1,2,3,4,5,1,2,3,4,1,2,3,4,2,4,4,3,1,2,2,3,4,5,13,13,1,2,3,4,5,13,3,1,5,1,2,3,4,5,13,2,0,3,1,5,3,2,4,5,0,2,2,1,2,3,4,5,1,1,5,1,2,3,4,5,2,13,1,2,3,4,5,13,1,2,3,4,5,13,5,1,2,3,4,5,13,31,32,33,31,32,34,34,33,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[6,[[7,[1]]]],[6,[[7,[2]]]],[6,[[7,[3]]]],[6,[[7,[4]]]],[6,[[7,[5]]]],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[],8],[[],8],[[],8],[[],8],[[9,10],2],0,0,0,[[1,11],12],[[2,11],12],[[2,11],12],[[3,11],12],[[4,11],12],[[5,11],12],[[13,11],12],[[13,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[14,15,16],[[7,[3,4]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[2,17],[18,19],0,[[[21,[20]],[21,[20]],[22,[10]],[22,[[22,[23]]]]],1],[[[25,[24]],[25,[24]],26,27,[25,[24]]],5],0,[10,2],0,0,0,0,0,[[1,28],7],[[2,28],7],[[3,28],7],[[4,28],7],[[5,28],7],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[14,14],[[]],0,[6,[[7,[14]]]],[[14,14],8],[[],8],0,[[14,11],12],[[]],[30,[[7,[14,13]]]],[[]],0,0,[[14,28],7],[[]],[[],7],[[],7],[[],29]],"c":[],"p":[[3,"CallRequestParams",0],[3,"CallServiceResult",0],[3,"AVMOutcome",0],[3,"ErrorAVMOutcome",0],[3,"ParticleParameters",0],[8,"Deserializer",156],[4,"Result",157],[15,"bool"],[15,"i32"],[4,"Value",158],[3,"Formatter",159],[6,"Result",159],[4,"CallSeDeErrors",0],[3,"RawAVMOutcome",134],[15,"usize"],[3,"Duration",160],[3,"CallServiceResult",161],[6,"CallResults",0],[6,"CallResults",161],[3,"String",162],[8,"Into",163],[3,"Vec",164],[3,"SecurityTetraplet",165],[15,"str"],[4,"Cow",166],[15,"u64"],[15,"u32"],[8,"Serializer",167],[3,"TypeId",168],[3,"InterpreterOutcome",169],[13,"CallParamsArgsDeFailed",126],[13,"CallParamsTetrapletsDeFailed",126],[13,"CallResultsSeFailed",126],[13,"CallRequestsDeError",126]]},\
"avm_server":{"doc":"","t":"DDGEDDGDNNNNNNNRNNDGNGNEDINNQDNNNNGGENNNNEENNNNNNNDNNNNNNNNNNNNDNNNNNNNNNNSSLMMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLLLLLLLLLLLLLLLLLKMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLFMLMMMMMMLALLLLLLLLLLLLLLLLLLLLMLMMLMMMMAKMMLLLLLLLLMMLLLLLLLLLLLLLLLLLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDLLLMLMLLLLMLLLLLLLMMLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLMLLLLLLLLMLLLLLLLMMLLLLLLL","n":["AVM","AVMConfig","AVMDataStore","AVMError","AVMMemoryStats","AVMOutcome","AVMResult","AnomalyData","AnomalyDataSeError","Array","Array","Boolean","Boolean","ByteArray","ByteArray","CALL_SERVICE_SUCCESS","CallParamsArgsDeFailed","CallParamsTetrapletsDeFailed","CallRequestParams","CallRequests","CallRequestsDeError","CallResults","CallResultsSeFailed","CallSeDeErrors","CallServiceResult","DataStore","DataStoreError","Err","Error","ErrorAVMOutcome","F32","F32","F64","F64","HostExportedFunc","HostImportDescriptor","HostImportError","I32","I32","I64","I64","IType","IValue","InterpreterFailed","InvalidUTF8String","LifterError","LowererError","MismatchWValues","MismatchWValuesCount","Ok","ParticleParameters","Record","Record","RecordNotFound","RunnerError","S16","S16","S32","S32","S64","S64","S8","S8","SecurityTetraplet","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","add_lambda","air_script","air_wasm_path","argument_types","arguments","avm_outcome","avm_runner","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_requests","call_results","cleanup_data","cleanup_data","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_anomaly_data","current_data","current_peer_id","data","data_store","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","detect_anomaly","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","error_code","error_handler","error_message","execution_time","execution_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_fd","from_filelike","from_filelike","from_grip","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_raw_outcome","from_socketlike","from_socketlike","function_name","function_name","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","hash","hash","host_exported_func","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_peer_id","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_raw","into_raw_result","json_path","literal_tetraplet","logging_mask","max_heap_size","max_memory_size","memory_delta","memory_delta","memory_size","memory_stats","ne_vec","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next_peer_pks","ok","outcome","output_type","parse","particle","particle_id","peer_pk","prev_data","raw_outcome","read_data","result","ret_code","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_id","service_id","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","source","store_data","tetraplets","timestamp","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","call_params","call_params","call_results","de_error","de_error","error","raw_call_request","se_error","AVMRunner","RawAVMOutcome","borrow","borrow_mut","call","call_requests","call_tracing","data","debug","deref","deref_mut","drop","error_message","from","get_fd_flags","init","into","memory_stats","new","new_set_fd_flags","next_peer_pks","ret_code","set_fd_flags","try_from","try_into","type_id","vzip","NEVec","borrow","borrow_mut","clone","clone_into","debug","default","deref","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","fmt","from","get_fd_flags","get_hash","hash","init","into","into_vec","new","new_set_fd_flags","serialize","set_fd_flags","to_owned","try_from","try_into","type_id","vzip","RawAVMOutcome","borrow","borrow_mut","call_requests","clone","clone_into","data","debug","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","error_message","fmt","from","from_interpreter_outcome","get_fd_flags","init","into","new_set_fd_flags","next_peer_pks","ret_code","serialize","set_fd_flags","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"avm_server"],[510,"avm_server::CallSeDeErrors"],[518,"avm_server::avm_runner"],[545,"avm_server::ne_vec"],[577,"avm_server::raw_outcome"],[609,"alloc::string"],[610,"core::convert"],[611,"alloc::vec"],[612,"fluence_keypair::key_pair"],[613,"core::result"],[614,"core::fmt"],[615,"core::fmt"],[616,"core::time"],[617,"serde_json::value"],[618,"core::fmt"],[619,"it_lilo::lifter::error"],[620,"it_lilo::traits::record_resolvable"],[621,"alloc::string"],[622,"alloc::alloc"],[623,"std::os::fd::owned"],[624,"io_lifetimes::portability"],[625,"io_lifetimes::portability"],[626,"std::io::error"],[627,"core::hash"],[628,"core::marker"],[629,"core::hash"],[630,"std::collections::hash::map"],[631,"std::collections::hash::map"],[632,"io_lifetimes::portability"],[633,"wast"],[634,"serde::ser"],[635,"core::error"],[636,"core::option"],[637,"std::io"],[638,"core::any"],[639,"std::path"],[640,"core::clone"],[641,"core::default"],[642,"serde::de"],[643,"fluence_it_types::ne_vec"],[644,"serde::ser"]],"d":["","Describes behaviour of the AVM.","","","Return statistic of AVM server Wasm module heap footprint.","","","","This errors are encountered from serialization of data …","An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","Errors encountered while trying to deserialize arguments …","Errors encountered while trying to deserialize tetraplets …","Contains arguments of a call instruction and all other …","","This error is encountered when deserialization pof call …","","Errors encountered while trying to serialize call results.","","Represents an executed host function result.","This trait is used for","This errors are encountered from a data store object.","Contains the error value","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","","","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","This error contains interpreter outcome in case when …","","","","An error occurred when host functions tries to lift …","An error occurred when a host functions tries to lift …","Contains the success value","Represents parameters obtained from a particle.","A record contains record index from interfaces AST.","A record.","","This errors are encountered from an AVM runner.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","Describes an origin that set corresponding value.","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","Path to a AIR interpreter Wasm file.","Type of the closure arguments.","Arguments that should be passed to the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collected parameters of all met call instructions that …","","Cleanup data that become obsolete.","Cleanup data that become obsolete.","","","","","","","","","","","","","","","","","","","","","","Contains script data that should be preserved in an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if an anomaly happened and it’s necessary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If Some, this closure is called with error when errors is …","","","Time of a particle execution (it counts only execution …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Name of a function that returned corresponding value.","Name of a function from service identified by service_id …","","","","","","","","","","","","","","","","","","","","This closure will be invoked for corresponding import.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Value was produced by applying this <code>json_path</code> to the …","Create a tetraplet for string literals defined in the …","Mask used to filter logs, for details see <code>log_utf8_string</code> …","Maximum heap size in bytes available for the interpreter.","Possibly set max memory size for AVM server.","","Memory in bytes AVM linear heap was extended during …","Size of currently used linear memory in bytes. Please note …","Return memory stat of an interpreter heap.","","","","Create AVM with provided config.","","","","","","","","","","","","","","","","","","Public keys of peers that should receive data.","","","Types of output of the closure.","","","","Id of a peer where corresponding value was set.","","","","Resulted JValue returned by a service string.","A error code service or builtin returned, where …","","","","","","","","","Id of a service that set corresponding value.","Id of a service that should be called.","","","","","","","","","","","","","","","","","","","Tetraplets that should be passed to the service.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Create AVM with the provided config.","","","","","","","","","<code>NEVec&lt;T&gt;</code> represents a non-empty <code>Vec&lt;T&gt;</code>. It derefs to <code>Vec&lt;T&gt;</code>","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Converts this NEVec into Vec","Creates a new non-empty vector, based on an inner <code>Vec&lt;T&gt;</code>. …","","","","","","","","","This struct is very similar to AVMOutcome, but keeps …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,30,18,19,18,19,18,19,0,33,33,0,0,33,0,33,0,0,0,30,12,87,0,18,19,18,19,0,0,0,18,19,18,19,0,0,30,34,34,34,34,34,12,0,18,19,34,30,18,19,18,19,18,19,18,19,0,18,19,18,19,18,19,18,19,18,19,18,19,1,14,66,88,15,14,0,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,3,11,14,87,3,1,14,15,16,11,17,8,18,19,1,14,15,16,11,17,8,18,19,87,14,8,11,66,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,16,19,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,15,16,11,17,8,18,87,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,15,16,11,17,18,19,1,1,14,14,15,15,16,16,11,11,17,17,18,18,16,17,88,17,14,11,1,1,14,15,30,30,16,16,11,17,8,18,33,33,34,34,19,1,1,14,3,66,15,64,30,30,30,16,11,17,8,18,33,34,34,34,34,34,19,19,19,19,19,19,19,19,19,19,19,19,19,30,30,30,30,30,30,30,30,30,11,30,30,1,15,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,18,1,18,88,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,8,87,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,16,0,1,1,66,66,64,14,11,64,3,0,1,14,3,15,8,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,11,16,17,88,18,14,8,1,14,0,87,16,16,1,14,15,16,11,17,8,18,1,15,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,30,34,87,15,8,18,1,14,15,16,11,17,8,18,19,1,30,16,18,33,34,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,8,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,1,14,3,66,15,64,30,16,11,17,8,18,33,34,19,89,90,91,89,90,92,92,91,0,0,77,77,77,25,77,25,77,77,77,77,25,77,77,77,77,77,77,77,25,25,77,77,77,77,77,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,[5,[4]],[5,[[7,[6]]]],8,9,10],[[12,[11]]]],0,0,[[2,2],13],[[3,2,2],12],[1,1],[14,14],[15,15],[16,16],[11,11],[17,17],[8,8],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2,14],13],0,0,0,0,[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[20,[[13,[21]]]],[[],1],[[],16],[[],19],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[23,[[13,[1]]]],[23,[[13,[14]]]],[23,[[13,[15]]]],[23,[[13,[16]]]],[23,[[13,[11]]]],[23,[[13,[17]]]],[23,[[13,[8]]]],[23,[[13,[18]]]],[[24,22,25],26],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[[1,1],26],[[14,14],26],[[15,15],26],[[16,16],26],[[11,11],26],[[17,17],26],[[18,18],26],[[19,19],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[27,28],16],0,0,0,0,0,[[1,20],[[13,[21]]]],[[1,20],[[13,[21]]]],[[14,20],[[13,[21]]]],[[15,20],[[13,[21]]]],[[[30,[29]],20],31],[[[30,[32]],20],31],[[16,20],[[13,[21]]]],[[16,20],[[13,[21]]]],[[11,20],[[13,[21]]]],[[17,20],[[13,[21]]]],[[8,20],[[13,[21]]]],[[18,20],[[13,[21]]]],[[33,20],[[13,[21]]]],[[33,20],[[13,[21]]]],[[34,20],[[13,[21]]]],[[34,20],[[13,[21]]]],[[19,20],[[13,[21]]]],[35,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[37,34],[[]],[38,34],[39,34],[40,34],[41,19],[6,19],[42,19],[27,19],[[[7,[6,43]]],19],[44,19],[45,19],[[]],[46,19],[47,19],[4,19],[48,19],[49,19],[50],[50],[50],[50],[50],[51],[52],[53],[54],[[25,22,24],[[13,[11,17]]]],[50],[50],0,0,[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[],[[13,[55,56]]]],[[[0,[57,58]],59],44],[[[0,[57,58]],59],44],[[1,60]],[[18,60]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,61],[[[63,[49,16,62]]],[[63,[49,61,62]]]],0,[[[5,[4]]],1],0,0,0,0,0,0,[3,64],0,[[[5,[4]],[5,[4]],[5,[4]],[5,[4]]],1],[[2,[65,[6]],[65,[6]],[65,[6]],[65,[6]],[65,[6]],24,22],14],[66,[[12,[3]]]],[[[5,[4]],[5,[4]],[7,[28,43]],[7,[[7,[1,43]],43]]],15],[[[67,[2]],[67,[2]],44,49,[67,[2]]],8],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],[55,[[13,[[69,[68]],56]]]],0,[28,16],0,0,[70,[[13,[18,71]]]],0,0,0,0,0,[[2,2],[[13,[[7,[6,43]]]]]],0,0,[[1,72],13],[[14,72],13],[[15,72],13],[[16,72],13],[[11,72],13],[[17,72],13],[[8,72],13],[[18,72],13],0,0,[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[69,[68]]],[[13,[56]]]],[[[30,[73]]],[[74,[73]]]],[34,[[74,[73]]]],[[[65,[6]],2,2],13],0,0,[[18,75],[[13,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[18,4],[[],4],[[],4],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[77,[5,[4]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[4]],44,49,[5,[4]],9,10,4],[[13,[25,0]]]],0,[[77,[5,[4]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[4]],44,49,[5,[4]],9,4,6,6,[7,[6]],4],[[13,[25,0]]]],0,[20,[[13,[21]]]],[22],[22],[22],0,[[]],[[],[[13,[55,56]]]],[[],22],[[]],[77,64],[[78,[74,[44]],27],[[13,[77,0]]]],[55,[[13,[[69,[68]],56]]]],0,0,[[[69,[68]]],[[13,[56]]]],[[],13],[[],13],[[],76],[[]],0,[[]],[[]],[[[80,[[0,[79,32]]]]],[[80,[[0,[79,32]]]]]],[[]],[20,[[13,[21]]]],[[],[[80,[[0,[81,32]]]]]],[[[80,[32]]]],[22],[22],[23,[[13,[[80,[[0,[32,82]]]]]]]],[22],[[[80,[[0,[[83,[[0,[[83,[[0,[[83,[[0,[83,32]]]],32]]]],32]]]],32]]]],[80,[[0,[[83,[[0,[[83,[[0,[[83,[[0,[83,32]]]],32]]]],32]]]],32]]]]],26],[[],26],[[],26],[[[80,[32]],20],[[13,[21]]]],[[]],[[],[[13,[55,56]]]],[[[0,[57,58]],59],44],[[[80,[[0,[57,32]]]],60]],[[],22],[[]],[[[80,[32]]],[[7,[32,43]]]],[[[7,[32,43]]],[[13,[[80,[32]],84]]]],[55,[[13,[[69,[68]],56]]]],[[[80,[[0,[32,85]]]],72],13],[[[69,[68]]],[[13,[56]]]],[[]],[[],13],[[],13],[[],76],[[]],0,[[]],[[]],0,[25,25],[[]],0,[20,[[13,[21]]]],[22],[22],[23,[[13,[25]]]],[22],[[25,25],26],[[],26],[[],26],0,[[25,20],[[13,[21]]]],[[]],[86,[[13,[25,33]]]],[[],[[13,[55,56]]]],[[],22],[[]],[55,[[13,[[69,[68]],56]]]],0,0,[[25,72],13],[[[69,[68]]],[[13,[56]]]],[[]],[[],13],[[],13],[[],76],[[]]],"c":[],"p":[[3,"SecurityTetraplet",0],[15,"str"],[3,"AVM",0],[3,"String",609],[8,"Into",610],[15,"u8"],[3,"Vec",611],[3,"ParticleParameters",0],[6,"CallResults",0],[4,"KeyPair",612],[3,"AVMOutcome",0],[6,"AVMResult",0],[4,"Result",613],[3,"AnomalyData",0],[3,"CallRequestParams",0],[3,"CallServiceResult",0],[3,"ErrorAVMOutcome",0],[4,"IType",0],[4,"IValue",0],[3,"Formatter",614],[3,"Error",614],[15,"usize"],[8,"Deserializer",615],[3,"Duration",616],[3,"RawAVMOutcome",577],[15,"bool"],[15,"i32"],[4,"Value",617],[8,"Display",614],[4,"AVMError",0],[6,"Result",614],[8,"Debug",614],[4,"CallSeDeErrors",0],[4,"HostImportError",0],[3,"ResolvedTriplet",618],[15,"never"],[4,"LiError",619],[4,"RecordResolvableError",620],[3,"FromUtf8Error",609],[4,"LoError",621],[15,"u16"],[15,"i64"],[3,"Global",622],[15,"u64"],[15,"i16"],[15,"i8"],[15,"f64"],[15,"f32"],[15,"u32"],[3,"OwnedFd",623],[8,"IntoFilelike",624],[8,"IntoFilelike",624],[8,"IntoSocketlike",624],[8,"IntoSocketlike",624],[3,"FdFlags",625],[3,"Error",626],[8,"Hash",627],[8,"Sized",628],[8,"BuildHasher",627],[8,"Hasher",627],[3,"CallServiceResult",629],[3,"RandomState",630],[3,"HashMap",630],[3,"AVMMemoryStats",0],[15,"slice"],[3,"AVMConfig",0],[4,"Cow",631],[8,"AsFilelike",624],[3,"SetFdFlags",625],[3,"Parser",632],[3,"Error",633],[8,"Serializer",634],[8,"Error",635],[4,"Option",636],[8,"Write",637],[3,"TypeId",638],[3,"AVMRunner",518],[3,"PathBuf",639],[8,"Clone",640],[3,"NEVec",545],[8,"Default",641],[8,"Deserialize",615],[8,"PartialEq",642],[3,"EmptyVec",643],[8,"Serialize",634],[3,"InterpreterOutcome",644],[8,"DataStore",0],[6,"HostImportDescriptor",0],[13,"CallParamsArgsDeFailed",510],[13,"CallParamsTetrapletsDeFailed",510],[13,"CallResultsSeFailed",510],[13,"CallRequestsDeError",510]]},\
"polyplets":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLMMLLMMLLLLLLLLL","n":["ResolvedTriplet","SecurityTetraplet","add_lambda","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","function_name","function_name","hash","hash","into","into","json_path","literal_tetraplet","new","peer_pk","peer_pk","serialize","serialize","service_id","service_id","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"polyplets"],[49,"serde::de"],[50,"core::result"],[51,"core::fmt"],[52,"core::fmt"],[53,"alloc::string"],[54,"core::convert"],[55,"serde::ser"],[56,"core::any"]],"d":["ResolvedTriplet represents peer network location with all …","Describes an origin that set corresponding value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Name of a function that returned corresponding value.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Value was produced by applying this <code>json_path</code> to the …","Create a tetraplet for string literals defined in the …","","","Id of a peer where corresponding value was set.","","","","Id of a service that set corresponding value.","","","","","","","","",""],"i":[0,0,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,3,1,1,3,1,3,1,3,1,1,1,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,1],"f":[0,0,[[1,2]],[[]],[[]],[[]],[[]],[3,3],[1,1],[[]],[[]],[[],3],[[],1],[4,[[5,[3]]]],[4,[[5,[1]]]],[[3,3],6],[[1,1],6],[[],6],[[],6],[[3,7],8],[[1,7],[[5,[9]]]],[[1,7],[[5,[9]]]],[[]],[3,1],[[]],0,0,[[3,10]],[[1,10]],[[]],[[]],0,[[[12,[11]]],1],[[[12,[11]],[12,[11]],[12,[11]],[12,[11]]],1],0,0,[[3,13],5],[[1,13],5],0,0,[[]],[[]],[[],11],[[],5],[[],5],[[],5],[[],5],[[],14],[[],14]],"c":[],"p":[[3,"SecurityTetraplet",0],[15,"str"],[3,"ResolvedTriplet",0],[8,"Deserializer",49],[4,"Result",50],[15,"bool"],[3,"Formatter",51],[6,"Result",51],[3,"Error",51],[8,"Hasher",52],[3,"String",53],[8,"Into",54],[8,"Serializer",55],[3,"TypeId",56]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
